Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions
Rule 2     instructions -> instruction
Rule 3     instructions -> instruction instructions
Rule 4     instruction -> assignment
Rule 5     instruction -> ifx
Rule 6     instruction -> if_else
Rule 7     instruction -> for
Rule 8     instruction -> while
Rule 9     instruction -> command
Rule 10    instruction -> return
Rule 11    instruction -> print
Rule 12    instruction -> compound
Rule 13    assignment -> ID = expression ;
Rule 14    assignment -> ID ADDASSIGN expression ;
Rule 15    assignment -> ID SUBASSIGN expression ;
Rule 16    assignment -> ID MULASSIGN expression ;
Rule 17    assignment -> ID DIVASSIGN expression ;
Rule 18    assignment -> ID [ vector ] = expression ;
Rule 19    assignment -> ID = ID [ vector ] ;
Rule 20    ifx -> IF ( condition ) instruction
Rule 21    if_else -> IF ( condition ) instruction ELSE instruction
Rule 22    for -> FOR iterator instruction
Rule 23    iterator -> ID = factor : factor
Rule 24    while -> WHILE ( condition ) instruction
Rule 25    command -> BREAK ;
Rule 26    command -> CONTINUE ;
Rule 27    return -> RETURN ;
Rule 28    return -> RETURN expression ;
Rule 29    print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ;
Rule 30    print -> PRINT vector ;
Rule 31    compound -> { program }
Rule 32    compound -> { }
Rule 33    condition -> expression_comparison
Rule 34    factor -> ID
Rule 35    factor -> number
Rule 36    number -> INTNUM
Rule 37    number -> FLOATNUM
Rule 38    expression -> factor
Rule 39    expression -> expression_bin_op
Rule 40    expression -> expression_dot_bin_op
Rule 41    expression -> expression_uminus
Rule 42    expression -> expression_transposition
Rule 43    expression -> expression_comparison
Rule 44    expression -> expression_matrix
Rule 45    expression -> expression_table
Rule 46    expression_bin_op -> expression PLUS expression
Rule 47    expression_bin_op -> expression MINUS expression
Rule 48    expression_bin_op -> expression TIMES expression
Rule 49    expression_bin_op -> expression DIVIDE expression
Rule 50    expression_dot_bin_op -> expression DOTADD expression
Rule 51    expression_dot_bin_op -> expression DOTSUB expression
Rule 52    expression_dot_bin_op -> expression DOTMUL expression
Rule 53    expression_dot_bin_op -> expression DOTDIV expression
Rule 54    expression_uminus -> MINUS expression
Rule 55    expression_transposition -> ID APOSTROPHE
Rule 56    expression_comparison -> expression LESS_THAN expression
Rule 57    expression_comparison -> expression GREATER_THAN expression
Rule 58    expression_comparison -> expression LESS_OR_EQUAL_THAN expression
Rule 59    expression_comparison -> expression GREATER_OR_EQUAL_THAN expression
Rule 60    expression_comparison -> expression NOT_EQUAL expression
Rule 61    expression_comparison -> expression EQUAL expression
Rule 62    expression_matrix -> ZEROS ( factor )
Rule 63    expression_matrix -> EYE ( factor )
Rule 64    expression_matrix -> ONES ( factor )
Rule 65    expression_table -> [ ]
Rule 66    expression_table -> [ matrix ]
Rule 67    matrix -> vector ; matrix
Rule 68    matrix -> vector
Rule 69    vector -> factor , vector
Rule 70    vector -> factor

Terminals, with rules where they appear

(                    : 20 21 24 62 63 64
)                    : 20 21 24 62 63 64
,                    : 69
:                    : 23
;                    : 13 14 15 16 17 18 19 25 26 27 28 29 30 67
=                    : 13 18 19 23
ADDASSIGN            : 14
APOSTROPHE           : 55
BREAK                : 25
CONTINUE             : 26
DIVASSIGN            : 17
DIVIDE               : 49
DOTADD               : 50
DOTDIV               : 53
DOTMUL               : 52
DOTSUB               : 51
DOUBLEAPOSTROPHE     : 29 29
ELSE                 : 21
EQUAL                : 61
EYE                  : 63
FLOATNUM             : 37
FOR                  : 22
GREATER_OR_EQUAL_THAN : 59
GREATER_THAN         : 57
ID                   : 13 14 15 16 17 18 19 19 23 34 55
IF                   : 20 21
INTNUM               : 36
LESS_OR_EQUAL_THAN   : 58
LESS_THAN            : 56
MINUS                : 47 54
MULASSIGN            : 16
NOT_EQUAL            : 60
ONES                 : 64
PLUS                 : 46
PRINT                : 29 30
RETURN               : 27 28
SUBASSIGN            : 15
TIMES                : 48
WHILE                : 24
ZEROS                : 62
[                    : 18 19 65 66
]                    : 18 19 65 66
error                : 
{                    : 31 32
}                    : 31 32

Nonterminals, with rules where they appear

assignment           : 4
command              : 9
compound             : 12
condition            : 20 21 24
expression           : 13 14 15 16 17 18 28 29 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 56 56 57 57 58 58 59 59 60 60 61 61
expression_bin_op    : 39
expression_comparison : 33 43
expression_dot_bin_op : 40
expression_matrix    : 44
expression_table     : 45
expression_transposition : 42
expression_uminus    : 41
factor               : 23 23 38 62 63 64 69 70
for                  : 7
if_else              : 6
ifx                  : 5
instruction          : 2 3 20 21 21 22 24
instructions         : 1 3
iterator             : 22
matrix               : 66 67
number               : 35
print                : 11
program              : 31 0
return               : 10
vector               : 18 19 30 67 68 69
while                : 8

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions
    (2) instructions -> . instruction
    (3) instructions -> . instruction instructions
    (4) instruction -> . assignment
    (5) instruction -> . ifx
    (6) instruction -> . if_else
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . command
    (10) instruction -> . return
    (11) instruction -> . print
    (12) instruction -> . compound
    (13) assignment -> . ID = expression ;
    (14) assignment -> . ID ADDASSIGN expression ;
    (15) assignment -> . ID SUBASSIGN expression ;
    (16) assignment -> . ID MULASSIGN expression ;
    (17) assignment -> . ID DIVASSIGN expression ;
    (18) assignment -> . ID [ vector ] = expression ;
    (19) assignment -> . ID = ID [ vector ] ;
    (20) ifx -> . IF ( condition ) instruction
    (21) if_else -> . IF ( condition ) instruction ELSE instruction
    (22) for -> . FOR iterator instruction
    (24) while -> . WHILE ( condition ) instruction
    (25) command -> . BREAK ;
    (26) command -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN expression ;
    (29) print -> . PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ;
    (30) print -> . PRINT vector ;
    (31) compound -> . { program }
    (32) compound -> . { }

    ID              shift and go to state 15
    IF              shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 2
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 3
    RETURN          shift and go to state 1
    PRINT           shift and go to state 4
    {               shift and go to state 21

    if_else                        shift and go to state 11
    for                            shift and go to state 6
    assignment                     shift and go to state 13
    instruction                    shift and go to state 17
    ifx                            shift and go to state 18
    while                          shift and go to state 20
    program                        shift and go to state 7
    command                        shift and go to state 9
    compound                       shift and go to state 14
    print                          shift and go to state 8
    return                         shift and go to state 5
    instructions                   shift and go to state 16

state 1

    (27) return -> RETURN . ;
    (28) return -> RETURN . expression ;
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ;               shift and go to state 31
    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 40
    expression_dot_bin_op          shift and go to state 27

state 2

    (24) while -> WHILE . ( condition ) instruction

    (               shift and go to state 41


state 3

    (26) command -> CONTINUE . ;

    ;               shift and go to state 42


state 4

    (29) print -> PRINT . DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ;
    (30) print -> PRINT . vector ;
    (69) vector -> . factor , vector
    (70) vector -> . factor
    (34) factor -> . ID
    (35) factor -> . number
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    DOUBLEAPOSTROPHE shift and go to state 43
    ID              shift and go to state 46
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    vector                         shift and go to state 44
    number                         shift and go to state 22
    factor                         shift and go to state 45

state 5

    (10) instruction -> return .

    ID              reduce using rule 10 (instruction -> return .)
    IF              reduce using rule 10 (instruction -> return .)
    FOR             reduce using rule 10 (instruction -> return .)
    WHILE           reduce using rule 10 (instruction -> return .)
    BREAK           reduce using rule 10 (instruction -> return .)
    CONTINUE        reduce using rule 10 (instruction -> return .)
    RETURN          reduce using rule 10 (instruction -> return .)
    PRINT           reduce using rule 10 (instruction -> return .)
    {               reduce using rule 10 (instruction -> return .)
    $end            reduce using rule 10 (instruction -> return .)
    }               reduce using rule 10 (instruction -> return .)
    ELSE            reduce using rule 10 (instruction -> return .)


state 6

    (7) instruction -> for .

    ID              reduce using rule 7 (instruction -> for .)
    IF              reduce using rule 7 (instruction -> for .)
    FOR             reduce using rule 7 (instruction -> for .)
    WHILE           reduce using rule 7 (instruction -> for .)
    BREAK           reduce using rule 7 (instruction -> for .)
    CONTINUE        reduce using rule 7 (instruction -> for .)
    RETURN          reduce using rule 7 (instruction -> for .)
    PRINT           reduce using rule 7 (instruction -> for .)
    {               reduce using rule 7 (instruction -> for .)
    $end            reduce using rule 7 (instruction -> for .)
    }               reduce using rule 7 (instruction -> for .)
    ELSE            reduce using rule 7 (instruction -> for .)


state 7

    (0) S' -> program .



state 8

    (11) instruction -> print .

    ID              reduce using rule 11 (instruction -> print .)
    IF              reduce using rule 11 (instruction -> print .)
    FOR             reduce using rule 11 (instruction -> print .)
    WHILE           reduce using rule 11 (instruction -> print .)
    BREAK           reduce using rule 11 (instruction -> print .)
    CONTINUE        reduce using rule 11 (instruction -> print .)
    RETURN          reduce using rule 11 (instruction -> print .)
    PRINT           reduce using rule 11 (instruction -> print .)
    {               reduce using rule 11 (instruction -> print .)
    $end            reduce using rule 11 (instruction -> print .)
    }               reduce using rule 11 (instruction -> print .)
    ELSE            reduce using rule 11 (instruction -> print .)


state 9

    (9) instruction -> command .

    ID              reduce using rule 9 (instruction -> command .)
    IF              reduce using rule 9 (instruction -> command .)
    FOR             reduce using rule 9 (instruction -> command .)
    WHILE           reduce using rule 9 (instruction -> command .)
    BREAK           reduce using rule 9 (instruction -> command .)
    CONTINUE        reduce using rule 9 (instruction -> command .)
    RETURN          reduce using rule 9 (instruction -> command .)
    PRINT           reduce using rule 9 (instruction -> command .)
    {               reduce using rule 9 (instruction -> command .)
    $end            reduce using rule 9 (instruction -> command .)
    }               reduce using rule 9 (instruction -> command .)
    ELSE            reduce using rule 9 (instruction -> command .)


state 10

    (20) ifx -> IF . ( condition ) instruction
    (21) if_else -> IF . ( condition ) instruction ELSE instruction

    (               shift and go to state 47


state 11

    (6) instruction -> if_else .

    ID              reduce using rule 6 (instruction -> if_else .)
    IF              reduce using rule 6 (instruction -> if_else .)
    FOR             reduce using rule 6 (instruction -> if_else .)
    WHILE           reduce using rule 6 (instruction -> if_else .)
    BREAK           reduce using rule 6 (instruction -> if_else .)
    CONTINUE        reduce using rule 6 (instruction -> if_else .)
    RETURN          reduce using rule 6 (instruction -> if_else .)
    PRINT           reduce using rule 6 (instruction -> if_else .)
    {               reduce using rule 6 (instruction -> if_else .)
    $end            reduce using rule 6 (instruction -> if_else .)
    }               reduce using rule 6 (instruction -> if_else .)
    ELSE            reduce using rule 6 (instruction -> if_else .)


state 12

    (22) for -> FOR . iterator instruction
    (23) iterator -> . ID = factor : factor

    ID              shift and go to state 49

    iterator                       shift and go to state 48

state 13

    (4) instruction -> assignment .

    ID              reduce using rule 4 (instruction -> assignment .)
    IF              reduce using rule 4 (instruction -> assignment .)
    FOR             reduce using rule 4 (instruction -> assignment .)
    WHILE           reduce using rule 4 (instruction -> assignment .)
    BREAK           reduce using rule 4 (instruction -> assignment .)
    CONTINUE        reduce using rule 4 (instruction -> assignment .)
    RETURN          reduce using rule 4 (instruction -> assignment .)
    PRINT           reduce using rule 4 (instruction -> assignment .)
    {               reduce using rule 4 (instruction -> assignment .)
    $end            reduce using rule 4 (instruction -> assignment .)
    }               reduce using rule 4 (instruction -> assignment .)
    ELSE            reduce using rule 4 (instruction -> assignment .)


state 14

    (12) instruction -> compound .

    ID              reduce using rule 12 (instruction -> compound .)
    IF              reduce using rule 12 (instruction -> compound .)
    FOR             reduce using rule 12 (instruction -> compound .)
    WHILE           reduce using rule 12 (instruction -> compound .)
    BREAK           reduce using rule 12 (instruction -> compound .)
    CONTINUE        reduce using rule 12 (instruction -> compound .)
    RETURN          reduce using rule 12 (instruction -> compound .)
    PRINT           reduce using rule 12 (instruction -> compound .)
    {               reduce using rule 12 (instruction -> compound .)
    $end            reduce using rule 12 (instruction -> compound .)
    }               reduce using rule 12 (instruction -> compound .)
    ELSE            reduce using rule 12 (instruction -> compound .)


state 15

    (13) assignment -> ID . = expression ;
    (14) assignment -> ID . ADDASSIGN expression ;
    (15) assignment -> ID . SUBASSIGN expression ;
    (16) assignment -> ID . MULASSIGN expression ;
    (17) assignment -> ID . DIVASSIGN expression ;
    (18) assignment -> ID . [ vector ] = expression ;
    (19) assignment -> ID . = ID [ vector ] ;

    =               shift and go to state 51
    ADDASSIGN       shift and go to state 54
    SUBASSIGN       shift and go to state 50
    MULASSIGN       shift and go to state 53
    DIVASSIGN       shift and go to state 52
    [               shift and go to state 55


state 16

    (1) program -> instructions .

    }               reduce using rule 1 (program -> instructions .)
    $end            reduce using rule 1 (program -> instructions .)


state 17

    (2) instructions -> instruction .
    (3) instructions -> instruction . instructions
    (2) instructions -> . instruction
    (3) instructions -> . instruction instructions
    (4) instruction -> . assignment
    (5) instruction -> . ifx
    (6) instruction -> . if_else
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . command
    (10) instruction -> . return
    (11) instruction -> . print
    (12) instruction -> . compound
    (13) assignment -> . ID = expression ;
    (14) assignment -> . ID ADDASSIGN expression ;
    (15) assignment -> . ID SUBASSIGN expression ;
    (16) assignment -> . ID MULASSIGN expression ;
    (17) assignment -> . ID DIVASSIGN expression ;
    (18) assignment -> . ID [ vector ] = expression ;
    (19) assignment -> . ID = ID [ vector ] ;
    (20) ifx -> . IF ( condition ) instruction
    (21) if_else -> . IF ( condition ) instruction ELSE instruction
    (22) for -> . FOR iterator instruction
    (24) while -> . WHILE ( condition ) instruction
    (25) command -> . BREAK ;
    (26) command -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN expression ;
    (29) print -> . PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ;
    (30) print -> . PRINT vector ;
    (31) compound -> . { program }
    (32) compound -> . { }

    $end            reduce using rule 2 (instructions -> instruction .)
    }               reduce using rule 2 (instructions -> instruction .)
    ID              shift and go to state 15
    IF              shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 2
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 3
    RETURN          shift and go to state 1
    PRINT           shift and go to state 4
    {               shift and go to state 21

    if_else                        shift and go to state 11
    for                            shift and go to state 6
    assignment                     shift and go to state 13
    instruction                    shift and go to state 17
    ifx                            shift and go to state 18
    while                          shift and go to state 20
    command                        shift and go to state 9
    compound                       shift and go to state 14
    print                          shift and go to state 8
    return                         shift and go to state 5
    instructions                   shift and go to state 56

state 18

    (5) instruction -> ifx .

    ID              reduce using rule 5 (instruction -> ifx .)
    IF              reduce using rule 5 (instruction -> ifx .)
    FOR             reduce using rule 5 (instruction -> ifx .)
    WHILE           reduce using rule 5 (instruction -> ifx .)
    BREAK           reduce using rule 5 (instruction -> ifx .)
    CONTINUE        reduce using rule 5 (instruction -> ifx .)
    RETURN          reduce using rule 5 (instruction -> ifx .)
    PRINT           reduce using rule 5 (instruction -> ifx .)
    {               reduce using rule 5 (instruction -> ifx .)
    $end            reduce using rule 5 (instruction -> ifx .)
    }               reduce using rule 5 (instruction -> ifx .)
    ELSE            reduce using rule 5 (instruction -> ifx .)


state 19

    (25) command -> BREAK . ;

    ;               shift and go to state 57


state 20

    (8) instruction -> while .

    ID              reduce using rule 8 (instruction -> while .)
    IF              reduce using rule 8 (instruction -> while .)
    FOR             reduce using rule 8 (instruction -> while .)
    WHILE           reduce using rule 8 (instruction -> while .)
    BREAK           reduce using rule 8 (instruction -> while .)
    CONTINUE        reduce using rule 8 (instruction -> while .)
    RETURN          reduce using rule 8 (instruction -> while .)
    PRINT           reduce using rule 8 (instruction -> while .)
    {               reduce using rule 8 (instruction -> while .)
    $end            reduce using rule 8 (instruction -> while .)
    }               reduce using rule 8 (instruction -> while .)
    ELSE            reduce using rule 8 (instruction -> while .)


state 21

    (31) compound -> { . program }
    (32) compound -> { . }
    (1) program -> . instructions
    (2) instructions -> . instruction
    (3) instructions -> . instruction instructions
    (4) instruction -> . assignment
    (5) instruction -> . ifx
    (6) instruction -> . if_else
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . command
    (10) instruction -> . return
    (11) instruction -> . print
    (12) instruction -> . compound
    (13) assignment -> . ID = expression ;
    (14) assignment -> . ID ADDASSIGN expression ;
    (15) assignment -> . ID SUBASSIGN expression ;
    (16) assignment -> . ID MULASSIGN expression ;
    (17) assignment -> . ID DIVASSIGN expression ;
    (18) assignment -> . ID [ vector ] = expression ;
    (19) assignment -> . ID = ID [ vector ] ;
    (20) ifx -> . IF ( condition ) instruction
    (21) if_else -> . IF ( condition ) instruction ELSE instruction
    (22) for -> . FOR iterator instruction
    (24) while -> . WHILE ( condition ) instruction
    (25) command -> . BREAK ;
    (26) command -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN expression ;
    (29) print -> . PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ;
    (30) print -> . PRINT vector ;
    (31) compound -> . { program }
    (32) compound -> . { }

    }               shift and go to state 59
    ID              shift and go to state 15
    IF              shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 2
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 3
    RETURN          shift and go to state 1
    PRINT           shift and go to state 4
    {               shift and go to state 21

    if_else                        shift and go to state 11
    for                            shift and go to state 6
    assignment                     shift and go to state 13
    instruction                    shift and go to state 17
    ifx                            shift and go to state 18
    while                          shift and go to state 20
    program                        shift and go to state 58
    command                        shift and go to state 9
    compound                       shift and go to state 14
    print                          shift and go to state 8
    return                         shift and go to state 5
    instructions                   shift and go to state 16

state 22

    (35) factor -> number .

    ;               reduce using rule 35 (factor -> number .)
    PLUS            reduce using rule 35 (factor -> number .)
    MINUS           reduce using rule 35 (factor -> number .)
    TIMES           reduce using rule 35 (factor -> number .)
    DIVIDE          reduce using rule 35 (factor -> number .)
    DOTADD          reduce using rule 35 (factor -> number .)
    DOTSUB          reduce using rule 35 (factor -> number .)
    DOTMUL          reduce using rule 35 (factor -> number .)
    DOTDIV          reduce using rule 35 (factor -> number .)
    LESS_THAN       reduce using rule 35 (factor -> number .)
    GREATER_THAN    reduce using rule 35 (factor -> number .)
    LESS_OR_EQUAL_THAN reduce using rule 35 (factor -> number .)
    GREATER_OR_EQUAL_THAN reduce using rule 35 (factor -> number .)
    NOT_EQUAL       reduce using rule 35 (factor -> number .)
    EQUAL           reduce using rule 35 (factor -> number .)
    ,               reduce using rule 35 (factor -> number .)
    DOUBLEAPOSTROPHE reduce using rule 35 (factor -> number .)
    )               reduce using rule 35 (factor -> number .)
    :               reduce using rule 35 (factor -> number .)
    ]               reduce using rule 35 (factor -> number .)
    ID              reduce using rule 35 (factor -> number .)
    IF              reduce using rule 35 (factor -> number .)
    FOR             reduce using rule 35 (factor -> number .)
    WHILE           reduce using rule 35 (factor -> number .)
    BREAK           reduce using rule 35 (factor -> number .)
    CONTINUE        reduce using rule 35 (factor -> number .)
    RETURN          reduce using rule 35 (factor -> number .)
    PRINT           reduce using rule 35 (factor -> number .)
    {               reduce using rule 35 (factor -> number .)


state 23

    (37) number -> FLOATNUM .

    ,               reduce using rule 37 (number -> FLOATNUM .)
    ;               reduce using rule 37 (number -> FLOATNUM .)
    DOUBLEAPOSTROPHE reduce using rule 37 (number -> FLOATNUM .)
    PLUS            reduce using rule 37 (number -> FLOATNUM .)
    MINUS           reduce using rule 37 (number -> FLOATNUM .)
    TIMES           reduce using rule 37 (number -> FLOATNUM .)
    DIVIDE          reduce using rule 37 (number -> FLOATNUM .)
    DOTADD          reduce using rule 37 (number -> FLOATNUM .)
    DOTSUB          reduce using rule 37 (number -> FLOATNUM .)
    DOTMUL          reduce using rule 37 (number -> FLOATNUM .)
    DOTDIV          reduce using rule 37 (number -> FLOATNUM .)
    LESS_THAN       reduce using rule 37 (number -> FLOATNUM .)
    GREATER_THAN    reduce using rule 37 (number -> FLOATNUM .)
    LESS_OR_EQUAL_THAN reduce using rule 37 (number -> FLOATNUM .)
    GREATER_OR_EQUAL_THAN reduce using rule 37 (number -> FLOATNUM .)
    NOT_EQUAL       reduce using rule 37 (number -> FLOATNUM .)
    EQUAL           reduce using rule 37 (number -> FLOATNUM .)
    )               reduce using rule 37 (number -> FLOATNUM .)
    ]               reduce using rule 37 (number -> FLOATNUM .)
    :               reduce using rule 37 (number -> FLOATNUM .)
    ID              reduce using rule 37 (number -> FLOATNUM .)
    IF              reduce using rule 37 (number -> FLOATNUM .)
    FOR             reduce using rule 37 (number -> FLOATNUM .)
    WHILE           reduce using rule 37 (number -> FLOATNUM .)
    BREAK           reduce using rule 37 (number -> FLOATNUM .)
    CONTINUE        reduce using rule 37 (number -> FLOATNUM .)
    RETURN          reduce using rule 37 (number -> FLOATNUM .)
    PRINT           reduce using rule 37 (number -> FLOATNUM .)
    {               reduce using rule 37 (number -> FLOATNUM .)


state 24

    (36) number -> INTNUM .

    ,               reduce using rule 36 (number -> INTNUM .)
    ;               reduce using rule 36 (number -> INTNUM .)
    DOUBLEAPOSTROPHE reduce using rule 36 (number -> INTNUM .)
    PLUS            reduce using rule 36 (number -> INTNUM .)
    MINUS           reduce using rule 36 (number -> INTNUM .)
    TIMES           reduce using rule 36 (number -> INTNUM .)
    DIVIDE          reduce using rule 36 (number -> INTNUM .)
    DOTADD          reduce using rule 36 (number -> INTNUM .)
    DOTSUB          reduce using rule 36 (number -> INTNUM .)
    DOTMUL          reduce using rule 36 (number -> INTNUM .)
    DOTDIV          reduce using rule 36 (number -> INTNUM .)
    LESS_THAN       reduce using rule 36 (number -> INTNUM .)
    GREATER_THAN    reduce using rule 36 (number -> INTNUM .)
    LESS_OR_EQUAL_THAN reduce using rule 36 (number -> INTNUM .)
    GREATER_OR_EQUAL_THAN reduce using rule 36 (number -> INTNUM .)
    NOT_EQUAL       reduce using rule 36 (number -> INTNUM .)
    EQUAL           reduce using rule 36 (number -> INTNUM .)
    )               reduce using rule 36 (number -> INTNUM .)
    ]               reduce using rule 36 (number -> INTNUM .)
    :               reduce using rule 36 (number -> INTNUM .)
    ID              reduce using rule 36 (number -> INTNUM .)
    IF              reduce using rule 36 (number -> INTNUM .)
    FOR             reduce using rule 36 (number -> INTNUM .)
    WHILE           reduce using rule 36 (number -> INTNUM .)
    BREAK           reduce using rule 36 (number -> INTNUM .)
    CONTINUE        reduce using rule 36 (number -> INTNUM .)
    RETURN          reduce using rule 36 (number -> INTNUM .)
    PRINT           reduce using rule 36 (number -> INTNUM .)
    {               reduce using rule 36 (number -> INTNUM .)


state 25

    (45) expression -> expression_table .

    DOUBLEAPOSTROPHE reduce using rule 45 (expression -> expression_table .)
    PLUS            reduce using rule 45 (expression -> expression_table .)
    MINUS           reduce using rule 45 (expression -> expression_table .)
    TIMES           reduce using rule 45 (expression -> expression_table .)
    DIVIDE          reduce using rule 45 (expression -> expression_table .)
    DOTADD          reduce using rule 45 (expression -> expression_table .)
    DOTSUB          reduce using rule 45 (expression -> expression_table .)
    DOTMUL          reduce using rule 45 (expression -> expression_table .)
    DOTDIV          reduce using rule 45 (expression -> expression_table .)
    LESS_THAN       reduce using rule 45 (expression -> expression_table .)
    GREATER_THAN    reduce using rule 45 (expression -> expression_table .)
    LESS_OR_EQUAL_THAN reduce using rule 45 (expression -> expression_table .)
    GREATER_OR_EQUAL_THAN reduce using rule 45 (expression -> expression_table .)
    NOT_EQUAL       reduce using rule 45 (expression -> expression_table .)
    EQUAL           reduce using rule 45 (expression -> expression_table .)
    ;               reduce using rule 45 (expression -> expression_table .)
    )               reduce using rule 45 (expression -> expression_table .)


state 26

    (54) expression_uminus -> MINUS . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 60
    expression_dot_bin_op          shift and go to state 27

state 27

    (40) expression -> expression_dot_bin_op .

    DOUBLEAPOSTROPHE reduce using rule 40 (expression -> expression_dot_bin_op .)
    PLUS            reduce using rule 40 (expression -> expression_dot_bin_op .)
    MINUS           reduce using rule 40 (expression -> expression_dot_bin_op .)
    TIMES           reduce using rule 40 (expression -> expression_dot_bin_op .)
    DIVIDE          reduce using rule 40 (expression -> expression_dot_bin_op .)
    DOTADD          reduce using rule 40 (expression -> expression_dot_bin_op .)
    DOTSUB          reduce using rule 40 (expression -> expression_dot_bin_op .)
    DOTMUL          reduce using rule 40 (expression -> expression_dot_bin_op .)
    DOTDIV          reduce using rule 40 (expression -> expression_dot_bin_op .)
    LESS_THAN       reduce using rule 40 (expression -> expression_dot_bin_op .)
    GREATER_THAN    reduce using rule 40 (expression -> expression_dot_bin_op .)
    LESS_OR_EQUAL_THAN reduce using rule 40 (expression -> expression_dot_bin_op .)
    GREATER_OR_EQUAL_THAN reduce using rule 40 (expression -> expression_dot_bin_op .)
    NOT_EQUAL       reduce using rule 40 (expression -> expression_dot_bin_op .)
    EQUAL           reduce using rule 40 (expression -> expression_dot_bin_op .)
    ;               reduce using rule 40 (expression -> expression_dot_bin_op .)
    )               reduce using rule 40 (expression -> expression_dot_bin_op .)


state 28

    (39) expression -> expression_bin_op .

    DOUBLEAPOSTROPHE reduce using rule 39 (expression -> expression_bin_op .)
    PLUS            reduce using rule 39 (expression -> expression_bin_op .)
    MINUS           reduce using rule 39 (expression -> expression_bin_op .)
    TIMES           reduce using rule 39 (expression -> expression_bin_op .)
    DIVIDE          reduce using rule 39 (expression -> expression_bin_op .)
    DOTADD          reduce using rule 39 (expression -> expression_bin_op .)
    DOTSUB          reduce using rule 39 (expression -> expression_bin_op .)
    DOTMUL          reduce using rule 39 (expression -> expression_bin_op .)
    DOTDIV          reduce using rule 39 (expression -> expression_bin_op .)
    LESS_THAN       reduce using rule 39 (expression -> expression_bin_op .)
    GREATER_THAN    reduce using rule 39 (expression -> expression_bin_op .)
    LESS_OR_EQUAL_THAN reduce using rule 39 (expression -> expression_bin_op .)
    GREATER_OR_EQUAL_THAN reduce using rule 39 (expression -> expression_bin_op .)
    NOT_EQUAL       reduce using rule 39 (expression -> expression_bin_op .)
    EQUAL           reduce using rule 39 (expression -> expression_bin_op .)
    ;               reduce using rule 39 (expression -> expression_bin_op .)
    )               reduce using rule 39 (expression -> expression_bin_op .)


state 29

    (43) expression -> expression_comparison .

    DOUBLEAPOSTROPHE reduce using rule 43 (expression -> expression_comparison .)
    PLUS            reduce using rule 43 (expression -> expression_comparison .)
    MINUS           reduce using rule 43 (expression -> expression_comparison .)
    TIMES           reduce using rule 43 (expression -> expression_comparison .)
    DIVIDE          reduce using rule 43 (expression -> expression_comparison .)
    DOTADD          reduce using rule 43 (expression -> expression_comparison .)
    DOTSUB          reduce using rule 43 (expression -> expression_comparison .)
    DOTMUL          reduce using rule 43 (expression -> expression_comparison .)
    DOTDIV          reduce using rule 43 (expression -> expression_comparison .)
    LESS_THAN       reduce using rule 43 (expression -> expression_comparison .)
    GREATER_THAN    reduce using rule 43 (expression -> expression_comparison .)
    LESS_OR_EQUAL_THAN reduce using rule 43 (expression -> expression_comparison .)
    GREATER_OR_EQUAL_THAN reduce using rule 43 (expression -> expression_comparison .)
    NOT_EQUAL       reduce using rule 43 (expression -> expression_comparison .)
    EQUAL           reduce using rule 43 (expression -> expression_comparison .)
    ;               reduce using rule 43 (expression -> expression_comparison .)
    )               reduce using rule 43 (expression -> expression_comparison .)


state 30

    (38) expression -> factor .

    DOUBLEAPOSTROPHE reduce using rule 38 (expression -> factor .)
    PLUS            reduce using rule 38 (expression -> factor .)
    MINUS           reduce using rule 38 (expression -> factor .)
    TIMES           reduce using rule 38 (expression -> factor .)
    DIVIDE          reduce using rule 38 (expression -> factor .)
    DOTADD          reduce using rule 38 (expression -> factor .)
    DOTSUB          reduce using rule 38 (expression -> factor .)
    DOTMUL          reduce using rule 38 (expression -> factor .)
    DOTDIV          reduce using rule 38 (expression -> factor .)
    LESS_THAN       reduce using rule 38 (expression -> factor .)
    GREATER_THAN    reduce using rule 38 (expression -> factor .)
    LESS_OR_EQUAL_THAN reduce using rule 38 (expression -> factor .)
    GREATER_OR_EQUAL_THAN reduce using rule 38 (expression -> factor .)
    NOT_EQUAL       reduce using rule 38 (expression -> factor .)
    EQUAL           reduce using rule 38 (expression -> factor .)
    ;               reduce using rule 38 (expression -> factor .)
    )               reduce using rule 38 (expression -> factor .)


state 31

    (27) return -> RETURN ; .

    ID              reduce using rule 27 (return -> RETURN ; .)
    IF              reduce using rule 27 (return -> RETURN ; .)
    FOR             reduce using rule 27 (return -> RETURN ; .)
    WHILE           reduce using rule 27 (return -> RETURN ; .)
    BREAK           reduce using rule 27 (return -> RETURN ; .)
    CONTINUE        reduce using rule 27 (return -> RETURN ; .)
    RETURN          reduce using rule 27 (return -> RETURN ; .)
    PRINT           reduce using rule 27 (return -> RETURN ; .)
    {               reduce using rule 27 (return -> RETURN ; .)
    $end            reduce using rule 27 (return -> RETURN ; .)
    }               reduce using rule 27 (return -> RETURN ; .)
    ELSE            reduce using rule 27 (return -> RETURN ; .)


state 32

    (63) expression_matrix -> EYE . ( factor )

    (               shift and go to state 61


state 33

    (41) expression -> expression_uminus .

    DOUBLEAPOSTROPHE reduce using rule 41 (expression -> expression_uminus .)
    PLUS            reduce using rule 41 (expression -> expression_uminus .)
    MINUS           reduce using rule 41 (expression -> expression_uminus .)
    TIMES           reduce using rule 41 (expression -> expression_uminus .)
    DIVIDE          reduce using rule 41 (expression -> expression_uminus .)
    DOTADD          reduce using rule 41 (expression -> expression_uminus .)
    DOTSUB          reduce using rule 41 (expression -> expression_uminus .)
    DOTMUL          reduce using rule 41 (expression -> expression_uminus .)
    DOTDIV          reduce using rule 41 (expression -> expression_uminus .)
    LESS_THAN       reduce using rule 41 (expression -> expression_uminus .)
    GREATER_THAN    reduce using rule 41 (expression -> expression_uminus .)
    LESS_OR_EQUAL_THAN reduce using rule 41 (expression -> expression_uminus .)
    GREATER_OR_EQUAL_THAN reduce using rule 41 (expression -> expression_uminus .)
    NOT_EQUAL       reduce using rule 41 (expression -> expression_uminus .)
    EQUAL           reduce using rule 41 (expression -> expression_uminus .)
    ;               reduce using rule 41 (expression -> expression_uminus .)
    )               reduce using rule 41 (expression -> expression_uminus .)


state 34

    (62) expression_matrix -> ZEROS . ( factor )

    (               shift and go to state 62


state 35

    (65) expression_table -> [ . ]
    (66) expression_table -> [ . matrix ]
    (67) matrix -> . vector ; matrix
    (68) matrix -> . vector
    (69) vector -> . factor , vector
    (70) vector -> . factor
    (34) factor -> . ID
    (35) factor -> . number
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ]               shift and go to state 65
    ID              shift and go to state 46
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    vector                         shift and go to state 64
    number                         shift and go to state 22
    matrix                         shift and go to state 63
    factor                         shift and go to state 45

state 36

    (44) expression -> expression_matrix .

    DOUBLEAPOSTROPHE reduce using rule 44 (expression -> expression_matrix .)
    PLUS            reduce using rule 44 (expression -> expression_matrix .)
    MINUS           reduce using rule 44 (expression -> expression_matrix .)
    TIMES           reduce using rule 44 (expression -> expression_matrix .)
    DIVIDE          reduce using rule 44 (expression -> expression_matrix .)
    DOTADD          reduce using rule 44 (expression -> expression_matrix .)
    DOTSUB          reduce using rule 44 (expression -> expression_matrix .)
    DOTMUL          reduce using rule 44 (expression -> expression_matrix .)
    DOTDIV          reduce using rule 44 (expression -> expression_matrix .)
    LESS_THAN       reduce using rule 44 (expression -> expression_matrix .)
    GREATER_THAN    reduce using rule 44 (expression -> expression_matrix .)
    LESS_OR_EQUAL_THAN reduce using rule 44 (expression -> expression_matrix .)
    GREATER_OR_EQUAL_THAN reduce using rule 44 (expression -> expression_matrix .)
    NOT_EQUAL       reduce using rule 44 (expression -> expression_matrix .)
    EQUAL           reduce using rule 44 (expression -> expression_matrix .)
    ;               reduce using rule 44 (expression -> expression_matrix .)
    )               reduce using rule 44 (expression -> expression_matrix .)


state 37

    (34) factor -> ID .
    (55) expression_transposition -> ID . APOSTROPHE

    ;               reduce using rule 34 (factor -> ID .)
    PLUS            reduce using rule 34 (factor -> ID .)
    MINUS           reduce using rule 34 (factor -> ID .)
    TIMES           reduce using rule 34 (factor -> ID .)
    DIVIDE          reduce using rule 34 (factor -> ID .)
    DOTADD          reduce using rule 34 (factor -> ID .)
    DOTSUB          reduce using rule 34 (factor -> ID .)
    DOTMUL          reduce using rule 34 (factor -> ID .)
    DOTDIV          reduce using rule 34 (factor -> ID .)
    LESS_THAN       reduce using rule 34 (factor -> ID .)
    GREATER_THAN    reduce using rule 34 (factor -> ID .)
    LESS_OR_EQUAL_THAN reduce using rule 34 (factor -> ID .)
    GREATER_OR_EQUAL_THAN reduce using rule 34 (factor -> ID .)
    NOT_EQUAL       reduce using rule 34 (factor -> ID .)
    EQUAL           reduce using rule 34 (factor -> ID .)
    DOUBLEAPOSTROPHE reduce using rule 34 (factor -> ID .)
    )               reduce using rule 34 (factor -> ID .)
    APOSTROPHE      shift and go to state 66


state 38

    (42) expression -> expression_transposition .

    DOUBLEAPOSTROPHE reduce using rule 42 (expression -> expression_transposition .)
    PLUS            reduce using rule 42 (expression -> expression_transposition .)
    MINUS           reduce using rule 42 (expression -> expression_transposition .)
    TIMES           reduce using rule 42 (expression -> expression_transposition .)
    DIVIDE          reduce using rule 42 (expression -> expression_transposition .)
    DOTADD          reduce using rule 42 (expression -> expression_transposition .)
    DOTSUB          reduce using rule 42 (expression -> expression_transposition .)
    DOTMUL          reduce using rule 42 (expression -> expression_transposition .)
    DOTDIV          reduce using rule 42 (expression -> expression_transposition .)
    LESS_THAN       reduce using rule 42 (expression -> expression_transposition .)
    GREATER_THAN    reduce using rule 42 (expression -> expression_transposition .)
    LESS_OR_EQUAL_THAN reduce using rule 42 (expression -> expression_transposition .)
    GREATER_OR_EQUAL_THAN reduce using rule 42 (expression -> expression_transposition .)
    NOT_EQUAL       reduce using rule 42 (expression -> expression_transposition .)
    EQUAL           reduce using rule 42 (expression -> expression_transposition .)
    ;               reduce using rule 42 (expression -> expression_transposition .)
    )               reduce using rule 42 (expression -> expression_transposition .)


state 39

    (64) expression_matrix -> ONES . ( factor )

    (               shift and go to state 67


state 40

    (28) return -> RETURN expression . ;
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    ;               shift and go to state 80
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68
    LESS_THAN       shift and go to state 78
    GREATER_THAN    shift and go to state 79
    LESS_OR_EQUAL_THAN shift and go to state 72
    GREATER_OR_EQUAL_THAN shift and go to state 69
    NOT_EQUAL       shift and go to state 76
    EQUAL           shift and go to state 73


state 41

    (24) while -> WHILE ( . condition ) instruction
    (33) condition -> . expression_comparison
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_comparison          shift and go to state 83
    number                         shift and go to state 22
    expression_uminus              shift and go to state 33
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 85
    condition                      shift and go to state 84
    expression_dot_bin_op          shift and go to state 27

state 42

    (26) command -> CONTINUE ; .

    ID              reduce using rule 26 (command -> CONTINUE ; .)
    IF              reduce using rule 26 (command -> CONTINUE ; .)
    FOR             reduce using rule 26 (command -> CONTINUE ; .)
    WHILE           reduce using rule 26 (command -> CONTINUE ; .)
    BREAK           reduce using rule 26 (command -> CONTINUE ; .)
    CONTINUE        reduce using rule 26 (command -> CONTINUE ; .)
    RETURN          reduce using rule 26 (command -> CONTINUE ; .)
    PRINT           reduce using rule 26 (command -> CONTINUE ; .)
    {               reduce using rule 26 (command -> CONTINUE ; .)
    }               reduce using rule 26 (command -> CONTINUE ; .)
    $end            reduce using rule 26 (command -> CONTINUE ; .)
    ELSE            reduce using rule 26 (command -> CONTINUE ; .)


state 43

    (29) print -> PRINT DOUBLEAPOSTROPHE . expression DOUBLEAPOSTROPHE ;
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 86
    expression_dot_bin_op          shift and go to state 27

state 44

    (30) print -> PRINT vector . ;

    ;               shift and go to state 87


state 45

    (69) vector -> factor . , vector
    (70) vector -> factor .

    ,               shift and go to state 88
    ;               reduce using rule 70 (vector -> factor .)
    ]               reduce using rule 70 (vector -> factor .)


state 46

    (34) factor -> ID .

    ,               reduce using rule 34 (factor -> ID .)
    ;               reduce using rule 34 (factor -> ID .)
    :               reduce using rule 34 (factor -> ID .)
    ]               reduce using rule 34 (factor -> ID .)
    )               reduce using rule 34 (factor -> ID .)
    ID              reduce using rule 34 (factor -> ID .)
    IF              reduce using rule 34 (factor -> ID .)
    FOR             reduce using rule 34 (factor -> ID .)
    WHILE           reduce using rule 34 (factor -> ID .)
    BREAK           reduce using rule 34 (factor -> ID .)
    CONTINUE        reduce using rule 34 (factor -> ID .)
    RETURN          reduce using rule 34 (factor -> ID .)
    PRINT           reduce using rule 34 (factor -> ID .)
    {               reduce using rule 34 (factor -> ID .)


state 47

    (20) ifx -> IF ( . condition ) instruction
    (21) if_else -> IF ( . condition ) instruction ELSE instruction
    (33) condition -> . expression_comparison
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_comparison          shift and go to state 83
    number                         shift and go to state 22
    expression_uminus              shift and go to state 33
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 85
    condition                      shift and go to state 89
    expression_dot_bin_op          shift and go to state 27

state 48

    (22) for -> FOR iterator . instruction
    (4) instruction -> . assignment
    (5) instruction -> . ifx
    (6) instruction -> . if_else
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . command
    (10) instruction -> . return
    (11) instruction -> . print
    (12) instruction -> . compound
    (13) assignment -> . ID = expression ;
    (14) assignment -> . ID ADDASSIGN expression ;
    (15) assignment -> . ID SUBASSIGN expression ;
    (16) assignment -> . ID MULASSIGN expression ;
    (17) assignment -> . ID DIVASSIGN expression ;
    (18) assignment -> . ID [ vector ] = expression ;
    (19) assignment -> . ID = ID [ vector ] ;
    (20) ifx -> . IF ( condition ) instruction
    (21) if_else -> . IF ( condition ) instruction ELSE instruction
    (22) for -> . FOR iterator instruction
    (24) while -> . WHILE ( condition ) instruction
    (25) command -> . BREAK ;
    (26) command -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN expression ;
    (29) print -> . PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ;
    (30) print -> . PRINT vector ;
    (31) compound -> . { program }
    (32) compound -> . { }

    ID              shift and go to state 15
    IF              shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 2
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 3
    RETURN          shift and go to state 1
    PRINT           shift and go to state 4
    {               shift and go to state 21

    if_else                        shift and go to state 11
    for                            shift and go to state 6
    assignment                     shift and go to state 13
    instruction                    shift and go to state 90
    ifx                            shift and go to state 18
    while                          shift and go to state 20
    command                        shift and go to state 9
    compound                       shift and go to state 14
    print                          shift and go to state 8
    return                         shift and go to state 5

state 49

    (23) iterator -> ID . = factor : factor

    =               shift and go to state 91


state 50

    (15) assignment -> ID SUBASSIGN . expression ;
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 92
    expression_dot_bin_op          shift and go to state 27

state 51

    (13) assignment -> ID = . expression ;
    (19) assignment -> ID = . ID [ vector ] ;
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 93
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    factor                         shift and go to state 30
    expression_table               shift and go to state 25
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 94
    expression_dot_bin_op          shift and go to state 27

state 52

    (17) assignment -> ID DIVASSIGN . expression ;
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 95
    expression_dot_bin_op          shift and go to state 27

state 53

    (16) assignment -> ID MULASSIGN . expression ;
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 96
    expression_dot_bin_op          shift and go to state 27

state 54

    (14) assignment -> ID ADDASSIGN . expression ;
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 97
    expression_dot_bin_op          shift and go to state 27

state 55

    (18) assignment -> ID [ . vector ] = expression ;
    (69) vector -> . factor , vector
    (70) vector -> . factor
    (34) factor -> . ID
    (35) factor -> . number
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 46
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    vector                         shift and go to state 98
    number                         shift and go to state 22
    factor                         shift and go to state 45

state 56

    (3) instructions -> instruction instructions .

    $end            reduce using rule 3 (instructions -> instruction instructions .)
    }               reduce using rule 3 (instructions -> instruction instructions .)


state 57

    (25) command -> BREAK ; .

    ID              reduce using rule 25 (command -> BREAK ; .)
    IF              reduce using rule 25 (command -> BREAK ; .)
    FOR             reduce using rule 25 (command -> BREAK ; .)
    WHILE           reduce using rule 25 (command -> BREAK ; .)
    BREAK           reduce using rule 25 (command -> BREAK ; .)
    CONTINUE        reduce using rule 25 (command -> BREAK ; .)
    RETURN          reduce using rule 25 (command -> BREAK ; .)
    PRINT           reduce using rule 25 (command -> BREAK ; .)
    {               reduce using rule 25 (command -> BREAK ; .)
    }               reduce using rule 25 (command -> BREAK ; .)
    $end            reduce using rule 25 (command -> BREAK ; .)
    ELSE            reduce using rule 25 (command -> BREAK ; .)


state 58

    (31) compound -> { program . }

    }               shift and go to state 99


state 59

    (32) compound -> { } .

    ID              reduce using rule 32 (compound -> { } .)
    IF              reduce using rule 32 (compound -> { } .)
    FOR             reduce using rule 32 (compound -> { } .)
    WHILE           reduce using rule 32 (compound -> { } .)
    BREAK           reduce using rule 32 (compound -> { } .)
    CONTINUE        reduce using rule 32 (compound -> { } .)
    RETURN          reduce using rule 32 (compound -> { } .)
    PRINT           reduce using rule 32 (compound -> { } .)
    {               reduce using rule 32 (compound -> { } .)
    $end            reduce using rule 32 (compound -> { } .)
    }               reduce using rule 32 (compound -> { } .)
    ELSE            reduce using rule 32 (compound -> { } .)


state 60

    (54) expression_uminus -> MINUS expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    PLUS            reduce using rule 54 (expression_uminus -> MINUS expression .)
    MINUS           reduce using rule 54 (expression_uminus -> MINUS expression .)
    TIMES           reduce using rule 54 (expression_uminus -> MINUS expression .)
    DIVIDE          reduce using rule 54 (expression_uminus -> MINUS expression .)
    DOTADD          reduce using rule 54 (expression_uminus -> MINUS expression .)
    DOTSUB          reduce using rule 54 (expression_uminus -> MINUS expression .)
    DOTMUL          reduce using rule 54 (expression_uminus -> MINUS expression .)
    DOTDIV          reduce using rule 54 (expression_uminus -> MINUS expression .)
    LESS_THAN       reduce using rule 54 (expression_uminus -> MINUS expression .)
    GREATER_THAN    reduce using rule 54 (expression_uminus -> MINUS expression .)
    LESS_OR_EQUAL_THAN reduce using rule 54 (expression_uminus -> MINUS expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 54 (expression_uminus -> MINUS expression .)
    NOT_EQUAL       reduce using rule 54 (expression_uminus -> MINUS expression .)
    EQUAL           reduce using rule 54 (expression_uminus -> MINUS expression .)
    ;               reduce using rule 54 (expression_uminus -> MINUS expression .)
    DOUBLEAPOSTROPHE reduce using rule 54 (expression_uminus -> MINUS expression .)
    )               reduce using rule 54 (expression_uminus -> MINUS expression .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 82 ]
  ! TIMES           [ shift and go to state 74 ]
  ! DIVIDE          [ shift and go to state 71 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTSUB          [ shift and go to state 81 ]
  ! DOTMUL          [ shift and go to state 70 ]
  ! DOTDIV          [ shift and go to state 68 ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 61

    (63) expression_matrix -> EYE ( . factor )
    (34) factor -> . ID
    (35) factor -> . number
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 46
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    number                         shift and go to state 22
    factor                         shift and go to state 100

state 62

    (62) expression_matrix -> ZEROS ( . factor )
    (34) factor -> . ID
    (35) factor -> . number
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 46
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    number                         shift and go to state 22
    factor                         shift and go to state 101

state 63

    (66) expression_table -> [ matrix . ]

    ]               shift and go to state 102


state 64

    (67) matrix -> vector . ; matrix
    (68) matrix -> vector .

    ;               shift and go to state 103
    ]               reduce using rule 68 (matrix -> vector .)


state 65

    (65) expression_table -> [ ] .

    PLUS            reduce using rule 65 (expression_table -> [ ] .)
    MINUS           reduce using rule 65 (expression_table -> [ ] .)
    TIMES           reduce using rule 65 (expression_table -> [ ] .)
    DIVIDE          reduce using rule 65 (expression_table -> [ ] .)
    DOTADD          reduce using rule 65 (expression_table -> [ ] .)
    DOTSUB          reduce using rule 65 (expression_table -> [ ] .)
    DOTMUL          reduce using rule 65 (expression_table -> [ ] .)
    DOTDIV          reduce using rule 65 (expression_table -> [ ] .)
    LESS_THAN       reduce using rule 65 (expression_table -> [ ] .)
    GREATER_THAN    reduce using rule 65 (expression_table -> [ ] .)
    LESS_OR_EQUAL_THAN reduce using rule 65 (expression_table -> [ ] .)
    GREATER_OR_EQUAL_THAN reduce using rule 65 (expression_table -> [ ] .)
    NOT_EQUAL       reduce using rule 65 (expression_table -> [ ] .)
    EQUAL           reduce using rule 65 (expression_table -> [ ] .)
    ;               reduce using rule 65 (expression_table -> [ ] .)
    DOUBLEAPOSTROPHE reduce using rule 65 (expression_table -> [ ] .)
    )               reduce using rule 65 (expression_table -> [ ] .)


state 66

    (55) expression_transposition -> ID APOSTROPHE .

    LESS_THAN       reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    GREATER_THAN    reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    LESS_OR_EQUAL_THAN reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    GREATER_OR_EQUAL_THAN reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    NOT_EQUAL       reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    EQUAL           reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    PLUS            reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    MINUS           reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    TIMES           reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    DIVIDE          reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    DOTADD          reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    DOTSUB          reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    DOTMUL          reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    DOTDIV          reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    ;               reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    DOUBLEAPOSTROPHE reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)
    )               reduce using rule 55 (expression_transposition -> ID APOSTROPHE .)


state 67

    (64) expression_matrix -> ONES ( . factor )
    (34) factor -> . ID
    (35) factor -> . number
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 46
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    number                         shift and go to state 22
    factor                         shift and go to state 104

state 68

    (53) expression_dot_bin_op -> expression DOTDIV . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 105
    expression_dot_bin_op          shift and go to state 27

state 69

    (59) expression_comparison -> expression GREATER_OR_EQUAL_THAN . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 106
    expression_dot_bin_op          shift and go to state 27

state 70

    (52) expression_dot_bin_op -> expression DOTMUL . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 107
    expression_dot_bin_op          shift and go to state 27

state 71

    (49) expression_bin_op -> expression DIVIDE . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 108
    expression_dot_bin_op          shift and go to state 27

state 72

    (58) expression_comparison -> expression LESS_OR_EQUAL_THAN . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 109
    expression_dot_bin_op          shift and go to state 27

state 73

    (61) expression_comparison -> expression EQUAL . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 110
    expression_dot_bin_op          shift and go to state 27

state 74

    (48) expression_bin_op -> expression TIMES . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 111
    expression_dot_bin_op          shift and go to state 27

state 75

    (50) expression_dot_bin_op -> expression DOTADD . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 112
    expression_dot_bin_op          shift and go to state 27

state 76

    (60) expression_comparison -> expression NOT_EQUAL . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 113
    expression_dot_bin_op          shift and go to state 27

state 77

    (46) expression_bin_op -> expression PLUS . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 114
    expression_dot_bin_op          shift and go to state 27

state 78

    (56) expression_comparison -> expression LESS_THAN . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 115
    expression_dot_bin_op          shift and go to state 27

state 79

    (57) expression_comparison -> expression GREATER_THAN . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 116
    expression_dot_bin_op          shift and go to state 27

state 80

    (28) return -> RETURN expression ; .

    ID              reduce using rule 28 (return -> RETURN expression ; .)
    IF              reduce using rule 28 (return -> RETURN expression ; .)
    FOR             reduce using rule 28 (return -> RETURN expression ; .)
    WHILE           reduce using rule 28 (return -> RETURN expression ; .)
    BREAK           reduce using rule 28 (return -> RETURN expression ; .)
    CONTINUE        reduce using rule 28 (return -> RETURN expression ; .)
    RETURN          reduce using rule 28 (return -> RETURN expression ; .)
    PRINT           reduce using rule 28 (return -> RETURN expression ; .)
    {               reduce using rule 28 (return -> RETURN expression ; .)
    $end            reduce using rule 28 (return -> RETURN expression ; .)
    }               reduce using rule 28 (return -> RETURN expression ; .)
    ELSE            reduce using rule 28 (return -> RETURN expression ; .)


state 81

    (51) expression_dot_bin_op -> expression DOTSUB . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 117
    expression_dot_bin_op          shift and go to state 27

state 82

    (47) expression_bin_op -> expression MINUS . expression
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    expression_table               shift and go to state 25
    factor                         shift and go to state 30
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 118
    expression_dot_bin_op          shift and go to state 27

state 83

    (33) condition -> expression_comparison .
    (43) expression -> expression_comparison .

    )               reduce using rule 33 (condition -> expression_comparison .)
    LESS_THAN       reduce using rule 43 (expression -> expression_comparison .)
    GREATER_THAN    reduce using rule 43 (expression -> expression_comparison .)
    LESS_OR_EQUAL_THAN reduce using rule 43 (expression -> expression_comparison .)
    GREATER_OR_EQUAL_THAN reduce using rule 43 (expression -> expression_comparison .)
    NOT_EQUAL       reduce using rule 43 (expression -> expression_comparison .)
    EQUAL           reduce using rule 43 (expression -> expression_comparison .)
    PLUS            reduce using rule 43 (expression -> expression_comparison .)
    MINUS           reduce using rule 43 (expression -> expression_comparison .)
    TIMES           reduce using rule 43 (expression -> expression_comparison .)
    DIVIDE          reduce using rule 43 (expression -> expression_comparison .)
    DOTADD          reduce using rule 43 (expression -> expression_comparison .)
    DOTSUB          reduce using rule 43 (expression -> expression_comparison .)
    DOTMUL          reduce using rule 43 (expression -> expression_comparison .)
    DOTDIV          reduce using rule 43 (expression -> expression_comparison .)


state 84

    (24) while -> WHILE ( condition . ) instruction

    )               shift and go to state 119


state 85

    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression

    LESS_THAN       shift and go to state 78
    GREATER_THAN    shift and go to state 79
    LESS_OR_EQUAL_THAN shift and go to state 72
    GREATER_OR_EQUAL_THAN shift and go to state 69
    NOT_EQUAL       shift and go to state 76
    EQUAL           shift and go to state 73
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68


state 86

    (29) print -> PRINT DOUBLEAPOSTROPHE expression . DOUBLEAPOSTROPHE ;
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    DOUBLEAPOSTROPHE shift and go to state 120
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68
    LESS_THAN       shift and go to state 78
    GREATER_THAN    shift and go to state 79
    LESS_OR_EQUAL_THAN shift and go to state 72
    GREATER_OR_EQUAL_THAN shift and go to state 69
    NOT_EQUAL       shift and go to state 76
    EQUAL           shift and go to state 73


state 87

    (30) print -> PRINT vector ; .

    ID              reduce using rule 30 (print -> PRINT vector ; .)
    IF              reduce using rule 30 (print -> PRINT vector ; .)
    FOR             reduce using rule 30 (print -> PRINT vector ; .)
    WHILE           reduce using rule 30 (print -> PRINT vector ; .)
    BREAK           reduce using rule 30 (print -> PRINT vector ; .)
    CONTINUE        reduce using rule 30 (print -> PRINT vector ; .)
    RETURN          reduce using rule 30 (print -> PRINT vector ; .)
    PRINT           reduce using rule 30 (print -> PRINT vector ; .)
    {               reduce using rule 30 (print -> PRINT vector ; .)
    $end            reduce using rule 30 (print -> PRINT vector ; .)
    }               reduce using rule 30 (print -> PRINT vector ; .)
    ELSE            reduce using rule 30 (print -> PRINT vector ; .)


state 88

    (69) vector -> factor , . vector
    (69) vector -> . factor , vector
    (70) vector -> . factor
    (34) factor -> . ID
    (35) factor -> . number
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 46
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    vector                         shift and go to state 121
    number                         shift and go to state 22
    factor                         shift and go to state 45

state 89

    (20) ifx -> IF ( condition . ) instruction
    (21) if_else -> IF ( condition . ) instruction ELSE instruction

    )               shift and go to state 122


state 90

    (22) for -> FOR iterator instruction .

    ID              reduce using rule 22 (for -> FOR iterator instruction .)
    IF              reduce using rule 22 (for -> FOR iterator instruction .)
    FOR             reduce using rule 22 (for -> FOR iterator instruction .)
    WHILE           reduce using rule 22 (for -> FOR iterator instruction .)
    BREAK           reduce using rule 22 (for -> FOR iterator instruction .)
    CONTINUE        reduce using rule 22 (for -> FOR iterator instruction .)
    RETURN          reduce using rule 22 (for -> FOR iterator instruction .)
    PRINT           reduce using rule 22 (for -> FOR iterator instruction .)
    {               reduce using rule 22 (for -> FOR iterator instruction .)
    $end            reduce using rule 22 (for -> FOR iterator instruction .)
    }               reduce using rule 22 (for -> FOR iterator instruction .)
    ELSE            reduce using rule 22 (for -> FOR iterator instruction .)


state 91

    (23) iterator -> ID = . factor : factor
    (34) factor -> . ID
    (35) factor -> . number
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 46
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    number                         shift and go to state 22
    factor                         shift and go to state 123

state 92

    (15) assignment -> ID SUBASSIGN expression . ;
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    ;               shift and go to state 124
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68
    LESS_THAN       shift and go to state 78
    GREATER_THAN    shift and go to state 79
    LESS_OR_EQUAL_THAN shift and go to state 72
    GREATER_OR_EQUAL_THAN shift and go to state 69
    NOT_EQUAL       shift and go to state 76
    EQUAL           shift and go to state 73


state 93

    (19) assignment -> ID = ID . [ vector ] ;
    (34) factor -> ID .
    (55) expression_transposition -> ID . APOSTROPHE

    [               shift and go to state 125
    ;               reduce using rule 34 (factor -> ID .)
    PLUS            reduce using rule 34 (factor -> ID .)
    MINUS           reduce using rule 34 (factor -> ID .)
    TIMES           reduce using rule 34 (factor -> ID .)
    DIVIDE          reduce using rule 34 (factor -> ID .)
    DOTADD          reduce using rule 34 (factor -> ID .)
    DOTSUB          reduce using rule 34 (factor -> ID .)
    DOTMUL          reduce using rule 34 (factor -> ID .)
    DOTDIV          reduce using rule 34 (factor -> ID .)
    LESS_THAN       reduce using rule 34 (factor -> ID .)
    GREATER_THAN    reduce using rule 34 (factor -> ID .)
    LESS_OR_EQUAL_THAN reduce using rule 34 (factor -> ID .)
    GREATER_OR_EQUAL_THAN reduce using rule 34 (factor -> ID .)
    NOT_EQUAL       reduce using rule 34 (factor -> ID .)
    EQUAL           reduce using rule 34 (factor -> ID .)
    APOSTROPHE      shift and go to state 66


state 94

    (13) assignment -> ID = expression . ;
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    ;               shift and go to state 126
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68
    LESS_THAN       shift and go to state 78
    GREATER_THAN    shift and go to state 79
    LESS_OR_EQUAL_THAN shift and go to state 72
    GREATER_OR_EQUAL_THAN shift and go to state 69
    NOT_EQUAL       shift and go to state 76
    EQUAL           shift and go to state 73


state 95

    (17) assignment -> ID DIVASSIGN expression . ;
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    ;               shift and go to state 127
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68
    LESS_THAN       shift and go to state 78
    GREATER_THAN    shift and go to state 79
    LESS_OR_EQUAL_THAN shift and go to state 72
    GREATER_OR_EQUAL_THAN shift and go to state 69
    NOT_EQUAL       shift and go to state 76
    EQUAL           shift and go to state 73


state 96

    (16) assignment -> ID MULASSIGN expression . ;
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    ;               shift and go to state 128
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68
    LESS_THAN       shift and go to state 78
    GREATER_THAN    shift and go to state 79
    LESS_OR_EQUAL_THAN shift and go to state 72
    GREATER_OR_EQUAL_THAN shift and go to state 69
    NOT_EQUAL       shift and go to state 76
    EQUAL           shift and go to state 73


state 97

    (14) assignment -> ID ADDASSIGN expression . ;
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    ;               shift and go to state 129
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68
    LESS_THAN       shift and go to state 78
    GREATER_THAN    shift and go to state 79
    LESS_OR_EQUAL_THAN shift and go to state 72
    GREATER_OR_EQUAL_THAN shift and go to state 69
    NOT_EQUAL       shift and go to state 76
    EQUAL           shift and go to state 73


state 98

    (18) assignment -> ID [ vector . ] = expression ;

    ]               shift and go to state 130


state 99

    (31) compound -> { program } .

    ID              reduce using rule 31 (compound -> { program } .)
    IF              reduce using rule 31 (compound -> { program } .)
    FOR             reduce using rule 31 (compound -> { program } .)
    WHILE           reduce using rule 31 (compound -> { program } .)
    BREAK           reduce using rule 31 (compound -> { program } .)
    CONTINUE        reduce using rule 31 (compound -> { program } .)
    RETURN          reduce using rule 31 (compound -> { program } .)
    PRINT           reduce using rule 31 (compound -> { program } .)
    {               reduce using rule 31 (compound -> { program } .)
    $end            reduce using rule 31 (compound -> { program } .)
    }               reduce using rule 31 (compound -> { program } .)
    ELSE            reduce using rule 31 (compound -> { program } .)


state 100

    (63) expression_matrix -> EYE ( factor . )

    )               shift and go to state 131


state 101

    (62) expression_matrix -> ZEROS ( factor . )

    )               shift and go to state 132


state 102

    (66) expression_table -> [ matrix ] .

    PLUS            reduce using rule 66 (expression_table -> [ matrix ] .)
    MINUS           reduce using rule 66 (expression_table -> [ matrix ] .)
    TIMES           reduce using rule 66 (expression_table -> [ matrix ] .)
    DIVIDE          reduce using rule 66 (expression_table -> [ matrix ] .)
    DOTADD          reduce using rule 66 (expression_table -> [ matrix ] .)
    DOTSUB          reduce using rule 66 (expression_table -> [ matrix ] .)
    DOTMUL          reduce using rule 66 (expression_table -> [ matrix ] .)
    DOTDIV          reduce using rule 66 (expression_table -> [ matrix ] .)
    LESS_THAN       reduce using rule 66 (expression_table -> [ matrix ] .)
    GREATER_THAN    reduce using rule 66 (expression_table -> [ matrix ] .)
    LESS_OR_EQUAL_THAN reduce using rule 66 (expression_table -> [ matrix ] .)
    GREATER_OR_EQUAL_THAN reduce using rule 66 (expression_table -> [ matrix ] .)
    NOT_EQUAL       reduce using rule 66 (expression_table -> [ matrix ] .)
    EQUAL           reduce using rule 66 (expression_table -> [ matrix ] .)
    ;               reduce using rule 66 (expression_table -> [ matrix ] .)
    DOUBLEAPOSTROPHE reduce using rule 66 (expression_table -> [ matrix ] .)
    )               reduce using rule 66 (expression_table -> [ matrix ] .)


state 103

    (67) matrix -> vector ; . matrix
    (67) matrix -> . vector ; matrix
    (68) matrix -> . vector
    (69) vector -> . factor , vector
    (70) vector -> . factor
    (34) factor -> . ID
    (35) factor -> . number
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 46
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    vector                         shift and go to state 64
    number                         shift and go to state 22
    matrix                         shift and go to state 133
    factor                         shift and go to state 45

state 104

    (64) expression_matrix -> ONES ( factor . )

    )               shift and go to state 134


state 105

    (53) expression_dot_bin_op -> expression DOTDIV expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    PLUS            reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    MINUS           reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    TIMES           reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    DIVIDE          reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    DOTADD          reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    LESS_THAN       reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    GREATER_THAN    reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    LESS_OR_EQUAL_THAN reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    NOT_EQUAL       reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    EQUAL           reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    ;               reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    DOUBLEAPOSTROPHE reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)
    )               reduce using rule 53 (expression_dot_bin_op -> expression DOTDIV expression .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 82 ]
  ! TIMES           [ shift and go to state 74 ]
  ! DIVIDE          [ shift and go to state 71 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTSUB          [ shift and go to state 81 ]
  ! DOTMUL          [ shift and go to state 70 ]
  ! DOTDIV          [ shift and go to state 68 ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 106

    (59) expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    LESS_THAN       reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .)
    GREATER_THAN    reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .)
    LESS_OR_EQUAL_THAN reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .)
    NOT_EQUAL       reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .)
    EQUAL           reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .)
    ;               reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .)
    DOUBLEAPOSTROPHE reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .)
    )               reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68

  ! PLUS            [ reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .) ]
  ! MINUS           [ reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .) ]
  ! TIMES           [ reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .) ]
  ! DOTADD          [ reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .) ]
  ! DOTSUB          [ reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .) ]
  ! DOTMUL          [ reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .) ]
  ! DOTDIV          [ reduce using rule 59 (expression_comparison -> expression GREATER_OR_EQUAL_THAN expression .) ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 107

    (52) expression_dot_bin_op -> expression DOTMUL expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    PLUS            reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    MINUS           reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    TIMES           reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    DIVIDE          reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    DOTADD          reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    LESS_THAN       reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    GREATER_THAN    reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    LESS_OR_EQUAL_THAN reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    NOT_EQUAL       reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    EQUAL           reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    ;               reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    DOUBLEAPOSTROPHE reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)
    )               reduce using rule 52 (expression_dot_bin_op -> expression DOTMUL expression .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 82 ]
  ! TIMES           [ shift and go to state 74 ]
  ! DIVIDE          [ shift and go to state 71 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTSUB          [ shift and go to state 81 ]
  ! DOTMUL          [ shift and go to state 70 ]
  ! DOTDIV          [ shift and go to state 68 ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 108

    (49) expression_bin_op -> expression DIVIDE expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    PLUS            reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    MINUS           reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    TIMES           reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    DOTADD          reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    DOTSUB          reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    DOTMUL          reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    DOTDIV          reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    LESS_OR_EQUAL_THAN reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    EQUAL           reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    ;               reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    DOUBLEAPOSTROPHE reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)
    )               reduce using rule 49 (expression_bin_op -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 82 ]
  ! TIMES           [ shift and go to state 74 ]
  ! DIVIDE          [ shift and go to state 71 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTSUB          [ shift and go to state 81 ]
  ! DOTMUL          [ shift and go to state 70 ]
  ! DOTDIV          [ shift and go to state 68 ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 109

    (58) expression_comparison -> expression LESS_OR_EQUAL_THAN expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    LESS_THAN       reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .)
    GREATER_THAN    reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .)
    LESS_OR_EQUAL_THAN reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .)
    NOT_EQUAL       reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .)
    EQUAL           reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .)
    ;               reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .)
    DOUBLEAPOSTROPHE reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .)
    )               reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68

  ! PLUS            [ reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .) ]
  ! MINUS           [ reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .) ]
  ! TIMES           [ reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .) ]
  ! DOTADD          [ reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .) ]
  ! DOTSUB          [ reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .) ]
  ! DOTMUL          [ reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .) ]
  ! DOTDIV          [ reduce using rule 58 (expression_comparison -> expression LESS_OR_EQUAL_THAN expression .) ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 110

    (61) expression_comparison -> expression EQUAL expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    LESS_THAN       reduce using rule 61 (expression_comparison -> expression EQUAL expression .)
    GREATER_THAN    reduce using rule 61 (expression_comparison -> expression EQUAL expression .)
    LESS_OR_EQUAL_THAN reduce using rule 61 (expression_comparison -> expression EQUAL expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 61 (expression_comparison -> expression EQUAL expression .)
    NOT_EQUAL       reduce using rule 61 (expression_comparison -> expression EQUAL expression .)
    EQUAL           reduce using rule 61 (expression_comparison -> expression EQUAL expression .)
    ;               reduce using rule 61 (expression_comparison -> expression EQUAL expression .)
    DOUBLEAPOSTROPHE reduce using rule 61 (expression_comparison -> expression EQUAL expression .)
    )               reduce using rule 61 (expression_comparison -> expression EQUAL expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68

  ! PLUS            [ reduce using rule 61 (expression_comparison -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 61 (expression_comparison -> expression EQUAL expression .) ]
  ! TIMES           [ reduce using rule 61 (expression_comparison -> expression EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression_comparison -> expression EQUAL expression .) ]
  ! DOTADD          [ reduce using rule 61 (expression_comparison -> expression EQUAL expression .) ]
  ! DOTSUB          [ reduce using rule 61 (expression_comparison -> expression EQUAL expression .) ]
  ! DOTMUL          [ reduce using rule 61 (expression_comparison -> expression EQUAL expression .) ]
  ! DOTDIV          [ reduce using rule 61 (expression_comparison -> expression EQUAL expression .) ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 111

    (48) expression_bin_op -> expression TIMES expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    PLUS            reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    MINUS           reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    TIMES           reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    DIVIDE          reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    DOTADD          reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    DOTSUB          reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    DOTMUL          reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    DOTDIV          reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    LESS_THAN       reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    GREATER_THAN    reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    LESS_OR_EQUAL_THAN reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    NOT_EQUAL       reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    EQUAL           reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    ;               reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    DOUBLEAPOSTROPHE reduce using rule 48 (expression_bin_op -> expression TIMES expression .)
    )               reduce using rule 48 (expression_bin_op -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 82 ]
  ! TIMES           [ shift and go to state 74 ]
  ! DIVIDE          [ shift and go to state 71 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTSUB          [ shift and go to state 81 ]
  ! DOTMUL          [ shift and go to state 70 ]
  ! DOTDIV          [ shift and go to state 68 ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 112

    (50) expression_dot_bin_op -> expression DOTADD expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    PLUS            reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .)
    MINUS           reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .)
    DOTADD          reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .)
    DOTSUB          reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .)
    LESS_THAN       reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .)
    GREATER_THAN    reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .)
    LESS_OR_EQUAL_THAN reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .)
    NOT_EQUAL       reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .)
    EQUAL           reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .)
    ;               reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .)
    DOUBLEAPOSTROPHE reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .)
    )               reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .)
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68

  ! TIMES           [ reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 50 (expression_dot_bin_op -> expression DOTADD expression .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 82 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTSUB          [ shift and go to state 81 ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 113

    (60) expression_comparison -> expression NOT_EQUAL expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    LESS_THAN       reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .)
    GREATER_THAN    reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .)
    LESS_OR_EQUAL_THAN reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .)
    EQUAL           reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .)
    ;               reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .)
    DOUBLEAPOSTROPHE reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .)
    )               reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68

  ! PLUS            [ reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .) ]
  ! DOTADD          [ reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .) ]
  ! DOTSUB          [ reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .) ]
  ! DOTMUL          [ reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .) ]
  ! DOTDIV          [ reduce using rule 60 (expression_comparison -> expression NOT_EQUAL expression .) ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 114

    (46) expression_bin_op -> expression PLUS expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    PLUS            reduce using rule 46 (expression_bin_op -> expression PLUS expression .)
    MINUS           reduce using rule 46 (expression_bin_op -> expression PLUS expression .)
    DOTADD          reduce using rule 46 (expression_bin_op -> expression PLUS expression .)
    DOTSUB          reduce using rule 46 (expression_bin_op -> expression PLUS expression .)
    LESS_THAN       reduce using rule 46 (expression_bin_op -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 46 (expression_bin_op -> expression PLUS expression .)
    LESS_OR_EQUAL_THAN reduce using rule 46 (expression_bin_op -> expression PLUS expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 46 (expression_bin_op -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 46 (expression_bin_op -> expression PLUS expression .)
    EQUAL           reduce using rule 46 (expression_bin_op -> expression PLUS expression .)
    ;               reduce using rule 46 (expression_bin_op -> expression PLUS expression .)
    DOUBLEAPOSTROPHE reduce using rule 46 (expression_bin_op -> expression PLUS expression .)
    )               reduce using rule 46 (expression_bin_op -> expression PLUS expression .)
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68

  ! TIMES           [ reduce using rule 46 (expression_bin_op -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression_bin_op -> expression PLUS expression .) ]
  ! DOTMUL          [ reduce using rule 46 (expression_bin_op -> expression PLUS expression .) ]
  ! DOTDIV          [ reduce using rule 46 (expression_bin_op -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 82 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTSUB          [ shift and go to state 81 ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 115

    (56) expression_comparison -> expression LESS_THAN expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    LESS_THAN       reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .)
    GREATER_THAN    reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .)
    LESS_OR_EQUAL_THAN reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .)
    NOT_EQUAL       reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .)
    EQUAL           reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .)
    ;               reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .)
    DOUBLEAPOSTROPHE reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .)
    )               reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68

  ! PLUS            [ reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .) ]
  ! TIMES           [ reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .) ]
  ! DOTADD          [ reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .) ]
  ! DOTSUB          [ reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .) ]
  ! DOTMUL          [ reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .) ]
  ! DOTDIV          [ reduce using rule 56 (expression_comparison -> expression LESS_THAN expression .) ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 116

    (57) expression_comparison -> expression GREATER_THAN expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    LESS_THAN       reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .)
    GREATER_THAN    reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .)
    LESS_OR_EQUAL_THAN reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .)
    NOT_EQUAL       reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .)
    EQUAL           reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .)
    ;               reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .)
    DOUBLEAPOSTROPHE reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .)
    )               reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68

  ! PLUS            [ reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .) ]
  ! TIMES           [ reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .) ]
  ! DOTADD          [ reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .) ]
  ! DOTSUB          [ reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .) ]
  ! DOTMUL          [ reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .) ]
  ! DOTDIV          [ reduce using rule 57 (expression_comparison -> expression GREATER_THAN expression .) ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 117

    (51) expression_dot_bin_op -> expression DOTSUB expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    PLUS            reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .)
    MINUS           reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .)
    DOTADD          reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .)
    LESS_THAN       reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .)
    GREATER_THAN    reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .)
    LESS_OR_EQUAL_THAN reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .)
    NOT_EQUAL       reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .)
    EQUAL           reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .)
    ;               reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .)
    DOUBLEAPOSTROPHE reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .)
    )               reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .)
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68

  ! TIMES           [ reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 51 (expression_dot_bin_op -> expression DOTSUB expression .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 82 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTSUB          [ shift and go to state 81 ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 118

    (47) expression_bin_op -> expression MINUS expression .
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    PLUS            reduce using rule 47 (expression_bin_op -> expression MINUS expression .)
    MINUS           reduce using rule 47 (expression_bin_op -> expression MINUS expression .)
    DOTADD          reduce using rule 47 (expression_bin_op -> expression MINUS expression .)
    DOTSUB          reduce using rule 47 (expression_bin_op -> expression MINUS expression .)
    LESS_THAN       reduce using rule 47 (expression_bin_op -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 47 (expression_bin_op -> expression MINUS expression .)
    LESS_OR_EQUAL_THAN reduce using rule 47 (expression_bin_op -> expression MINUS expression .)
    GREATER_OR_EQUAL_THAN reduce using rule 47 (expression_bin_op -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 47 (expression_bin_op -> expression MINUS expression .)
    EQUAL           reduce using rule 47 (expression_bin_op -> expression MINUS expression .)
    ;               reduce using rule 47 (expression_bin_op -> expression MINUS expression .)
    DOUBLEAPOSTROPHE reduce using rule 47 (expression_bin_op -> expression MINUS expression .)
    )               reduce using rule 47 (expression_bin_op -> expression MINUS expression .)
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68

  ! TIMES           [ reduce using rule 47 (expression_bin_op -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression_bin_op -> expression MINUS expression .) ]
  ! DOTMUL          [ reduce using rule 47 (expression_bin_op -> expression MINUS expression .) ]
  ! DOTDIV          [ reduce using rule 47 (expression_bin_op -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 82 ]
  ! DOTADD          [ shift and go to state 75 ]
  ! DOTSUB          [ shift and go to state 81 ]
  ! LESS_THAN       [ shift and go to state 78 ]
  ! GREATER_THAN    [ shift and go to state 79 ]
  ! LESS_OR_EQUAL_THAN [ shift and go to state 72 ]
  ! GREATER_OR_EQUAL_THAN [ shift and go to state 69 ]
  ! NOT_EQUAL       [ shift and go to state 76 ]
  ! EQUAL           [ shift and go to state 73 ]


state 119

    (24) while -> WHILE ( condition ) . instruction
    (4) instruction -> . assignment
    (5) instruction -> . ifx
    (6) instruction -> . if_else
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . command
    (10) instruction -> . return
    (11) instruction -> . print
    (12) instruction -> . compound
    (13) assignment -> . ID = expression ;
    (14) assignment -> . ID ADDASSIGN expression ;
    (15) assignment -> . ID SUBASSIGN expression ;
    (16) assignment -> . ID MULASSIGN expression ;
    (17) assignment -> . ID DIVASSIGN expression ;
    (18) assignment -> . ID [ vector ] = expression ;
    (19) assignment -> . ID = ID [ vector ] ;
    (20) ifx -> . IF ( condition ) instruction
    (21) if_else -> . IF ( condition ) instruction ELSE instruction
    (22) for -> . FOR iterator instruction
    (24) while -> . WHILE ( condition ) instruction
    (25) command -> . BREAK ;
    (26) command -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN expression ;
    (29) print -> . PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ;
    (30) print -> . PRINT vector ;
    (31) compound -> . { program }
    (32) compound -> . { }

    ID              shift and go to state 15
    IF              shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 2
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 3
    RETURN          shift and go to state 1
    PRINT           shift and go to state 4
    {               shift and go to state 21

    if_else                        shift and go to state 11
    for                            shift and go to state 6
    assignment                     shift and go to state 13
    instruction                    shift and go to state 135
    ifx                            shift and go to state 18
    while                          shift and go to state 20
    command                        shift and go to state 9
    compound                       shift and go to state 14
    print                          shift and go to state 8
    return                         shift and go to state 5

state 120

    (29) print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE . ;

    ;               shift and go to state 136


state 121

    (69) vector -> factor , vector .

    ;               reduce using rule 69 (vector -> factor , vector .)
    ]               reduce using rule 69 (vector -> factor , vector .)


state 122

    (20) ifx -> IF ( condition ) . instruction
    (21) if_else -> IF ( condition ) . instruction ELSE instruction
    (4) instruction -> . assignment
    (5) instruction -> . ifx
    (6) instruction -> . if_else
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . command
    (10) instruction -> . return
    (11) instruction -> . print
    (12) instruction -> . compound
    (13) assignment -> . ID = expression ;
    (14) assignment -> . ID ADDASSIGN expression ;
    (15) assignment -> . ID SUBASSIGN expression ;
    (16) assignment -> . ID MULASSIGN expression ;
    (17) assignment -> . ID DIVASSIGN expression ;
    (18) assignment -> . ID [ vector ] = expression ;
    (19) assignment -> . ID = ID [ vector ] ;
    (20) ifx -> . IF ( condition ) instruction
    (21) if_else -> . IF ( condition ) instruction ELSE instruction
    (22) for -> . FOR iterator instruction
    (24) while -> . WHILE ( condition ) instruction
    (25) command -> . BREAK ;
    (26) command -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN expression ;
    (29) print -> . PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ;
    (30) print -> . PRINT vector ;
    (31) compound -> . { program }
    (32) compound -> . { }

    ID              shift and go to state 15
    IF              shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 2
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 3
    RETURN          shift and go to state 1
    PRINT           shift and go to state 4
    {               shift and go to state 21

    if_else                        shift and go to state 11
    for                            shift and go to state 6
    assignment                     shift and go to state 13
    instruction                    shift and go to state 137
    ifx                            shift and go to state 18
    while                          shift and go to state 20
    command                        shift and go to state 9
    compound                       shift and go to state 14
    print                          shift and go to state 8
    return                         shift and go to state 5

state 123

    (23) iterator -> ID = factor . : factor

    :               shift and go to state 138


state 124

    (15) assignment -> ID SUBASSIGN expression ; .

    ID              reduce using rule 15 (assignment -> ID SUBASSIGN expression ; .)
    IF              reduce using rule 15 (assignment -> ID SUBASSIGN expression ; .)
    FOR             reduce using rule 15 (assignment -> ID SUBASSIGN expression ; .)
    WHILE           reduce using rule 15 (assignment -> ID SUBASSIGN expression ; .)
    BREAK           reduce using rule 15 (assignment -> ID SUBASSIGN expression ; .)
    CONTINUE        reduce using rule 15 (assignment -> ID SUBASSIGN expression ; .)
    RETURN          reduce using rule 15 (assignment -> ID SUBASSIGN expression ; .)
    PRINT           reduce using rule 15 (assignment -> ID SUBASSIGN expression ; .)
    {               reduce using rule 15 (assignment -> ID SUBASSIGN expression ; .)
    $end            reduce using rule 15 (assignment -> ID SUBASSIGN expression ; .)
    }               reduce using rule 15 (assignment -> ID SUBASSIGN expression ; .)
    ELSE            reduce using rule 15 (assignment -> ID SUBASSIGN expression ; .)


state 125

    (19) assignment -> ID = ID [ . vector ] ;
    (69) vector -> . factor , vector
    (70) vector -> . factor
    (34) factor -> . ID
    (35) factor -> . number
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 46
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    vector                         shift and go to state 139
    number                         shift and go to state 22
    factor                         shift and go to state 45

state 126

    (13) assignment -> ID = expression ; .

    ID              reduce using rule 13 (assignment -> ID = expression ; .)
    IF              reduce using rule 13 (assignment -> ID = expression ; .)
    FOR             reduce using rule 13 (assignment -> ID = expression ; .)
    WHILE           reduce using rule 13 (assignment -> ID = expression ; .)
    BREAK           reduce using rule 13 (assignment -> ID = expression ; .)
    CONTINUE        reduce using rule 13 (assignment -> ID = expression ; .)
    RETURN          reduce using rule 13 (assignment -> ID = expression ; .)
    PRINT           reduce using rule 13 (assignment -> ID = expression ; .)
    {               reduce using rule 13 (assignment -> ID = expression ; .)
    $end            reduce using rule 13 (assignment -> ID = expression ; .)
    }               reduce using rule 13 (assignment -> ID = expression ; .)
    ELSE            reduce using rule 13 (assignment -> ID = expression ; .)


state 127

    (17) assignment -> ID DIVASSIGN expression ; .

    ID              reduce using rule 17 (assignment -> ID DIVASSIGN expression ; .)
    IF              reduce using rule 17 (assignment -> ID DIVASSIGN expression ; .)
    FOR             reduce using rule 17 (assignment -> ID DIVASSIGN expression ; .)
    WHILE           reduce using rule 17 (assignment -> ID DIVASSIGN expression ; .)
    BREAK           reduce using rule 17 (assignment -> ID DIVASSIGN expression ; .)
    CONTINUE        reduce using rule 17 (assignment -> ID DIVASSIGN expression ; .)
    RETURN          reduce using rule 17 (assignment -> ID DIVASSIGN expression ; .)
    PRINT           reduce using rule 17 (assignment -> ID DIVASSIGN expression ; .)
    {               reduce using rule 17 (assignment -> ID DIVASSIGN expression ; .)
    $end            reduce using rule 17 (assignment -> ID DIVASSIGN expression ; .)
    }               reduce using rule 17 (assignment -> ID DIVASSIGN expression ; .)
    ELSE            reduce using rule 17 (assignment -> ID DIVASSIGN expression ; .)


state 128

    (16) assignment -> ID MULASSIGN expression ; .

    ID              reduce using rule 16 (assignment -> ID MULASSIGN expression ; .)
    IF              reduce using rule 16 (assignment -> ID MULASSIGN expression ; .)
    FOR             reduce using rule 16 (assignment -> ID MULASSIGN expression ; .)
    WHILE           reduce using rule 16 (assignment -> ID MULASSIGN expression ; .)
    BREAK           reduce using rule 16 (assignment -> ID MULASSIGN expression ; .)
    CONTINUE        reduce using rule 16 (assignment -> ID MULASSIGN expression ; .)
    RETURN          reduce using rule 16 (assignment -> ID MULASSIGN expression ; .)
    PRINT           reduce using rule 16 (assignment -> ID MULASSIGN expression ; .)
    {               reduce using rule 16 (assignment -> ID MULASSIGN expression ; .)
    $end            reduce using rule 16 (assignment -> ID MULASSIGN expression ; .)
    }               reduce using rule 16 (assignment -> ID MULASSIGN expression ; .)
    ELSE            reduce using rule 16 (assignment -> ID MULASSIGN expression ; .)


state 129

    (14) assignment -> ID ADDASSIGN expression ; .

    ID              reduce using rule 14 (assignment -> ID ADDASSIGN expression ; .)
    IF              reduce using rule 14 (assignment -> ID ADDASSIGN expression ; .)
    FOR             reduce using rule 14 (assignment -> ID ADDASSIGN expression ; .)
    WHILE           reduce using rule 14 (assignment -> ID ADDASSIGN expression ; .)
    BREAK           reduce using rule 14 (assignment -> ID ADDASSIGN expression ; .)
    CONTINUE        reduce using rule 14 (assignment -> ID ADDASSIGN expression ; .)
    RETURN          reduce using rule 14 (assignment -> ID ADDASSIGN expression ; .)
    PRINT           reduce using rule 14 (assignment -> ID ADDASSIGN expression ; .)
    {               reduce using rule 14 (assignment -> ID ADDASSIGN expression ; .)
    $end            reduce using rule 14 (assignment -> ID ADDASSIGN expression ; .)
    }               reduce using rule 14 (assignment -> ID ADDASSIGN expression ; .)
    ELSE            reduce using rule 14 (assignment -> ID ADDASSIGN expression ; .)


state 130

    (18) assignment -> ID [ vector ] . = expression ;

    =               shift and go to state 140


state 131

    (63) expression_matrix -> EYE ( factor ) .

    PLUS            reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    MINUS           reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    TIMES           reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    DIVIDE          reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    DOTADD          reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    DOTSUB          reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    DOTMUL          reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    DOTDIV          reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    LESS_THAN       reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    GREATER_THAN    reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    LESS_OR_EQUAL_THAN reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    GREATER_OR_EQUAL_THAN reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    NOT_EQUAL       reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    EQUAL           reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    ;               reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    DOUBLEAPOSTROPHE reduce using rule 63 (expression_matrix -> EYE ( factor ) .)
    )               reduce using rule 63 (expression_matrix -> EYE ( factor ) .)


state 132

    (62) expression_matrix -> ZEROS ( factor ) .

    PLUS            reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    MINUS           reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    TIMES           reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    DIVIDE          reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    DOTADD          reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    DOTSUB          reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    DOTMUL          reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    DOTDIV          reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    LESS_THAN       reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    GREATER_THAN    reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    LESS_OR_EQUAL_THAN reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    GREATER_OR_EQUAL_THAN reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    NOT_EQUAL       reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    EQUAL           reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    ;               reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    DOUBLEAPOSTROPHE reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)
    )               reduce using rule 62 (expression_matrix -> ZEROS ( factor ) .)


state 133

    (67) matrix -> vector ; matrix .

    ]               reduce using rule 67 (matrix -> vector ; matrix .)


state 134

    (64) expression_matrix -> ONES ( factor ) .

    PLUS            reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    MINUS           reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    TIMES           reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    DIVIDE          reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    DOTADD          reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    DOTSUB          reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    DOTMUL          reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    DOTDIV          reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    LESS_THAN       reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    GREATER_THAN    reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    LESS_OR_EQUAL_THAN reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    GREATER_OR_EQUAL_THAN reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    NOT_EQUAL       reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    EQUAL           reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    ;               reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    DOUBLEAPOSTROPHE reduce using rule 64 (expression_matrix -> ONES ( factor ) .)
    )               reduce using rule 64 (expression_matrix -> ONES ( factor ) .)


state 135

    (24) while -> WHILE ( condition ) instruction .

    ID              reduce using rule 24 (while -> WHILE ( condition ) instruction .)
    IF              reduce using rule 24 (while -> WHILE ( condition ) instruction .)
    FOR             reduce using rule 24 (while -> WHILE ( condition ) instruction .)
    WHILE           reduce using rule 24 (while -> WHILE ( condition ) instruction .)
    BREAK           reduce using rule 24 (while -> WHILE ( condition ) instruction .)
    CONTINUE        reduce using rule 24 (while -> WHILE ( condition ) instruction .)
    RETURN          reduce using rule 24 (while -> WHILE ( condition ) instruction .)
    PRINT           reduce using rule 24 (while -> WHILE ( condition ) instruction .)
    {               reduce using rule 24 (while -> WHILE ( condition ) instruction .)
    }               reduce using rule 24 (while -> WHILE ( condition ) instruction .)
    $end            reduce using rule 24 (while -> WHILE ( condition ) instruction .)
    ELSE            reduce using rule 24 (while -> WHILE ( condition ) instruction .)


state 136

    (29) print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ; .

    ID              reduce using rule 29 (print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ; .)
    IF              reduce using rule 29 (print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ; .)
    FOR             reduce using rule 29 (print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ; .)
    WHILE           reduce using rule 29 (print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ; .)
    BREAK           reduce using rule 29 (print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ; .)
    CONTINUE        reduce using rule 29 (print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ; .)
    RETURN          reduce using rule 29 (print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ; .)
    PRINT           reduce using rule 29 (print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ; .)
    {               reduce using rule 29 (print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ; .)
    $end            reduce using rule 29 (print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ; .)
    }               reduce using rule 29 (print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ; .)
    ELSE            reduce using rule 29 (print -> PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ; .)


state 137

    (20) ifx -> IF ( condition ) instruction .
    (21) if_else -> IF ( condition ) instruction . ELSE instruction

    ID              reduce using rule 20 (ifx -> IF ( condition ) instruction .)
    IF              reduce using rule 20 (ifx -> IF ( condition ) instruction .)
    FOR             reduce using rule 20 (ifx -> IF ( condition ) instruction .)
    WHILE           reduce using rule 20 (ifx -> IF ( condition ) instruction .)
    BREAK           reduce using rule 20 (ifx -> IF ( condition ) instruction .)
    CONTINUE        reduce using rule 20 (ifx -> IF ( condition ) instruction .)
    RETURN          reduce using rule 20 (ifx -> IF ( condition ) instruction .)
    PRINT           reduce using rule 20 (ifx -> IF ( condition ) instruction .)
    {               reduce using rule 20 (ifx -> IF ( condition ) instruction .)
    $end            reduce using rule 20 (ifx -> IF ( condition ) instruction .)
    }               reduce using rule 20 (ifx -> IF ( condition ) instruction .)
    ELSE            shift and go to state 141

  ! ELSE            [ reduce using rule 20 (ifx -> IF ( condition ) instruction .) ]


state 138

    (23) iterator -> ID = factor : . factor
    (34) factor -> . ID
    (35) factor -> . number
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 46
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    number                         shift and go to state 22
    factor                         shift and go to state 142

state 139

    (19) assignment -> ID = ID [ vector . ] ;

    ]               shift and go to state 143


state 140

    (18) assignment -> ID [ vector ] = . expression ;
    (38) expression -> . factor
    (39) expression -> . expression_bin_op
    (40) expression -> . expression_dot_bin_op
    (41) expression -> . expression_uminus
    (42) expression -> . expression_transposition
    (43) expression -> . expression_comparison
    (44) expression -> . expression_matrix
    (45) expression -> . expression_table
    (34) factor -> . ID
    (35) factor -> . number
    (46) expression_bin_op -> . expression PLUS expression
    (47) expression_bin_op -> . expression MINUS expression
    (48) expression_bin_op -> . expression TIMES expression
    (49) expression_bin_op -> . expression DIVIDE expression
    (50) expression_dot_bin_op -> . expression DOTADD expression
    (51) expression_dot_bin_op -> . expression DOTSUB expression
    (52) expression_dot_bin_op -> . expression DOTMUL expression
    (53) expression_dot_bin_op -> . expression DOTDIV expression
    (54) expression_uminus -> . MINUS expression
    (55) expression_transposition -> . ID APOSTROPHE
    (56) expression_comparison -> . expression LESS_THAN expression
    (57) expression_comparison -> . expression GREATER_THAN expression
    (58) expression_comparison -> . expression LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> . expression GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> . expression NOT_EQUAL expression
    (61) expression_comparison -> . expression EQUAL expression
    (62) expression_matrix -> . ZEROS ( factor )
    (63) expression_matrix -> . EYE ( factor )
    (64) expression_matrix -> . ONES ( factor )
    (65) expression_table -> . [ ]
    (66) expression_table -> . [ matrix ]
    (36) number -> . INTNUM
    (37) number -> . FLOATNUM

    ID              shift and go to state 37
    MINUS           shift and go to state 26
    ZEROS           shift and go to state 34
    EYE             shift and go to state 32
    ONES            shift and go to state 39
    [               shift and go to state 35
    INTNUM          shift and go to state 24
    FLOATNUM        shift and go to state 23

    expression_transposition       shift and go to state 38
    expression_uminus              shift and go to state 33
    expression_comparison          shift and go to state 29
    number                         shift and go to state 22
    expression_matrix              shift and go to state 36
    factor                         shift and go to state 30
    expression_table               shift and go to state 25
    expression_bin_op              shift and go to state 28
    expression                     shift and go to state 144
    expression_dot_bin_op          shift and go to state 27

state 141

    (21) if_else -> IF ( condition ) instruction ELSE . instruction
    (4) instruction -> . assignment
    (5) instruction -> . ifx
    (6) instruction -> . if_else
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . command
    (10) instruction -> . return
    (11) instruction -> . print
    (12) instruction -> . compound
    (13) assignment -> . ID = expression ;
    (14) assignment -> . ID ADDASSIGN expression ;
    (15) assignment -> . ID SUBASSIGN expression ;
    (16) assignment -> . ID MULASSIGN expression ;
    (17) assignment -> . ID DIVASSIGN expression ;
    (18) assignment -> . ID [ vector ] = expression ;
    (19) assignment -> . ID = ID [ vector ] ;
    (20) ifx -> . IF ( condition ) instruction
    (21) if_else -> . IF ( condition ) instruction ELSE instruction
    (22) for -> . FOR iterator instruction
    (24) while -> . WHILE ( condition ) instruction
    (25) command -> . BREAK ;
    (26) command -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN expression ;
    (29) print -> . PRINT DOUBLEAPOSTROPHE expression DOUBLEAPOSTROPHE ;
    (30) print -> . PRINT vector ;
    (31) compound -> . { program }
    (32) compound -> . { }

    ID              shift and go to state 15
    IF              shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 2
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 3
    RETURN          shift and go to state 1
    PRINT           shift and go to state 4
    {               shift and go to state 21

    if_else                        shift and go to state 11
    for                            shift and go to state 6
    assignment                     shift and go to state 13
    instruction                    shift and go to state 145
    ifx                            shift and go to state 18
    while                          shift and go to state 20
    command                        shift and go to state 9
    compound                       shift and go to state 14
    print                          shift and go to state 8
    return                         shift and go to state 5

state 142

    (23) iterator -> ID = factor : factor .

    ID              reduce using rule 23 (iterator -> ID = factor : factor .)
    IF              reduce using rule 23 (iterator -> ID = factor : factor .)
    FOR             reduce using rule 23 (iterator -> ID = factor : factor .)
    WHILE           reduce using rule 23 (iterator -> ID = factor : factor .)
    BREAK           reduce using rule 23 (iterator -> ID = factor : factor .)
    CONTINUE        reduce using rule 23 (iterator -> ID = factor : factor .)
    RETURN          reduce using rule 23 (iterator -> ID = factor : factor .)
    PRINT           reduce using rule 23 (iterator -> ID = factor : factor .)
    {               reduce using rule 23 (iterator -> ID = factor : factor .)


state 143

    (19) assignment -> ID = ID [ vector ] . ;

    ;               shift and go to state 146


state 144

    (18) assignment -> ID [ vector ] = expression . ;
    (46) expression_bin_op -> expression . PLUS expression
    (47) expression_bin_op -> expression . MINUS expression
    (48) expression_bin_op -> expression . TIMES expression
    (49) expression_bin_op -> expression . DIVIDE expression
    (50) expression_dot_bin_op -> expression . DOTADD expression
    (51) expression_dot_bin_op -> expression . DOTSUB expression
    (52) expression_dot_bin_op -> expression . DOTMUL expression
    (53) expression_dot_bin_op -> expression . DOTDIV expression
    (56) expression_comparison -> expression . LESS_THAN expression
    (57) expression_comparison -> expression . GREATER_THAN expression
    (58) expression_comparison -> expression . LESS_OR_EQUAL_THAN expression
    (59) expression_comparison -> expression . GREATER_OR_EQUAL_THAN expression
    (60) expression_comparison -> expression . NOT_EQUAL expression
    (61) expression_comparison -> expression . EQUAL expression

    ;               shift and go to state 147
    PLUS            shift and go to state 77
    MINUS           shift and go to state 82
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 71
    DOTADD          shift and go to state 75
    DOTSUB          shift and go to state 81
    DOTMUL          shift and go to state 70
    DOTDIV          shift and go to state 68
    LESS_THAN       shift and go to state 78
    GREATER_THAN    shift and go to state 79
    LESS_OR_EQUAL_THAN shift and go to state 72
    GREATER_OR_EQUAL_THAN shift and go to state 69
    NOT_EQUAL       shift and go to state 76
    EQUAL           shift and go to state 73


state 145

    (21) if_else -> IF ( condition ) instruction ELSE instruction .

    ID              reduce using rule 21 (if_else -> IF ( condition ) instruction ELSE instruction .)
    IF              reduce using rule 21 (if_else -> IF ( condition ) instruction ELSE instruction .)
    FOR             reduce using rule 21 (if_else -> IF ( condition ) instruction ELSE instruction .)
    WHILE           reduce using rule 21 (if_else -> IF ( condition ) instruction ELSE instruction .)
    BREAK           reduce using rule 21 (if_else -> IF ( condition ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 21 (if_else -> IF ( condition ) instruction ELSE instruction .)
    RETURN          reduce using rule 21 (if_else -> IF ( condition ) instruction ELSE instruction .)
    PRINT           reduce using rule 21 (if_else -> IF ( condition ) instruction ELSE instruction .)
    {               reduce using rule 21 (if_else -> IF ( condition ) instruction ELSE instruction .)
    $end            reduce using rule 21 (if_else -> IF ( condition ) instruction ELSE instruction .)
    }               reduce using rule 21 (if_else -> IF ( condition ) instruction ELSE instruction .)
    ELSE            reduce using rule 21 (if_else -> IF ( condition ) instruction ELSE instruction .)


state 146

    (19) assignment -> ID = ID [ vector ] ; .

    ID              reduce using rule 19 (assignment -> ID = ID [ vector ] ; .)
    IF              reduce using rule 19 (assignment -> ID = ID [ vector ] ; .)
    FOR             reduce using rule 19 (assignment -> ID = ID [ vector ] ; .)
    WHILE           reduce using rule 19 (assignment -> ID = ID [ vector ] ; .)
    BREAK           reduce using rule 19 (assignment -> ID = ID [ vector ] ; .)
    CONTINUE        reduce using rule 19 (assignment -> ID = ID [ vector ] ; .)
    RETURN          reduce using rule 19 (assignment -> ID = ID [ vector ] ; .)
    PRINT           reduce using rule 19 (assignment -> ID = ID [ vector ] ; .)
    {               reduce using rule 19 (assignment -> ID = ID [ vector ] ; .)
    $end            reduce using rule 19 (assignment -> ID = ID [ vector ] ; .)
    }               reduce using rule 19 (assignment -> ID = ID [ vector ] ; .)
    ELSE            reduce using rule 19 (assignment -> ID = ID [ vector ] ; .)


state 147

    (18) assignment -> ID [ vector ] = expression ; .

    ID              reduce using rule 18 (assignment -> ID [ vector ] = expression ; .)
    IF              reduce using rule 18 (assignment -> ID [ vector ] = expression ; .)
    FOR             reduce using rule 18 (assignment -> ID [ vector ] = expression ; .)
    WHILE           reduce using rule 18 (assignment -> ID [ vector ] = expression ; .)
    BREAK           reduce using rule 18 (assignment -> ID [ vector ] = expression ; .)
    CONTINUE        reduce using rule 18 (assignment -> ID [ vector ] = expression ; .)
    RETURN          reduce using rule 18 (assignment -> ID [ vector ] = expression ; .)
    PRINT           reduce using rule 18 (assignment -> ID [ vector ] = expression ; .)
    {               reduce using rule 18 (assignment -> ID [ vector ] = expression ; .)
    $end            reduce using rule 18 (assignment -> ID [ vector ] = expression ; .)
    }               reduce using rule 18 (assignment -> ID [ vector ] = expression ; .)
    ELSE            reduce using rule 18 (assignment -> ID [ vector ] = expression ; .)

